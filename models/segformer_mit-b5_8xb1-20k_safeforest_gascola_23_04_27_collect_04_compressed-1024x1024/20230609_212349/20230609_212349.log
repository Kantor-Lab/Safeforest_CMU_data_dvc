2023/06/09 21:23:50 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.16 (default, Mar  2 2023, 03:21:46) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 1474975460
    GPU 0: GRID A100X-40C
    CUDA_HOME: None
    GCC: gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0
    PyTorch: 2.0.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.15.2
    OpenCV: 4.7.0
    MMEngine: 0.7.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1474975460
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/06/09 21:23:51 - mmengine - INFO - Config:
norm_cfg = dict(type='SyncBN', requires_grad=True)
data_preprocessor = dict(
    type='SegDataPreProcessor',
    mean=[123.675, 116.28, 103.53],
    std=[58.395, 57.12, 57.375],
    bgr_to_rgb=True,
    pad_val=0,
    seg_pad_val=255,
    size=(1024, 1024))
model = dict(
    type='EncoderDecoder',
    data_preprocessor=dict(
        type='SegDataPreProcessor',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        bgr_to_rgb=True,
        pad_val=0,
        seg_pad_val=255,
        size=(1024, 1024)),
    pretrained=None,
    backbone=dict(
        type='MixVisionTransformer',
        in_channels=3,
        embed_dims=64,
        num_stages=4,
        num_layers=[3, 6, 40, 3],
        num_heads=[1, 2, 5, 8],
        patch_sizes=[7, 3, 3, 3],
        sr_ratios=[8, 4, 2, 1],
        out_indices=(0, 1, 2, 3),
        mlp_ratio=4,
        qkv_bias=True,
        drop_rate=0.0,
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        init_cfg=dict(type='Pretrained', checkpoint='pretrain/mit_b5.pth')),
    decode_head=dict(
        type='SegformerHead',
        in_channels=[64, 128, 320, 512],
        in_index=[0, 1, 2, 3],
        channels=256,
        dropout_ratio=0.1,
        num_classes=4,
        norm_cfg=dict(type='SyncBN', requires_grad=True),
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
    train_cfg=dict(),
    test_cfg=dict(mode='slide', crop_size=(1024, 1024), stride=(768, 768)))
dataset_type = 'Safeforest23CompressedDataset'
data_root = '/ofo-share/repos-david/Safeforest_CMU_data_dvc//data/site_Gascola/04_27_23/collect_04/processed_01/annotations/safeforest23_condensed'
crop_size = (1024, 1024)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(
        type='RandomResize',
        scale=(2048, 1024),
        ratio_range=(0.5, 2.0),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', scale=(2048, 1024), keep_ratio=True),
    dict(type='LoadAnnotations'),
    dict(type='PackSegInputs')
]
img_ratios = [0.5, 0.75, 1.0, 1.25, 1.5, 1.75]
tta_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(
        type='TestTimeAug',
        transforms=[[{
            'type': 'Resize',
            'scale_factor': 0.5,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 0.75,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.0,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.25,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.5,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.75,
            'keep_ratio': True
        }],
                    [{
                        'type': 'RandomFlip',
                        'prob': 0.0,
                        'direction': 'horizontal'
                    }, {
                        'type': 'RandomFlip',
                        'prob': 1.0,
                        'direction': 'horizontal'
                    }], [{
                        'type': 'LoadAnnotations'
                    }], [{
                        'type': 'PackSegInputs'
                    }]])
]
train_dataloader = dict(
    batch_size=1,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='InfiniteSampler', shuffle=True),
    dataset=dict(
        type='Safeforest23CompressedDataset',
        data_root=
        '/ofo-share/repos-david/Safeforest_CMU_data_dvc//data/site_Gascola/04_27_23/collect_04/processed_01/annotations/safeforest23_condensed',
        data_prefix=dict(
            img_path='img_dir/train', seg_map_path='ann_dir/train'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations'),
            dict(
                type='RandomResize',
                scale=(2048, 1024),
                ratio_range=(0.5, 2.0),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs')
        ]))
val_dataloader = dict(
    batch_size=1,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='Safeforest23CompressedDataset',
        data_root=
        '/ofo-share/repos-david/Safeforest_CMU_data_dvc//data/site_Gascola/04_27_23/collect_04/processed_01/annotations/safeforest23_condensed',
        data_prefix=dict(img_path='img_dir/val', seg_map_path='ann_dir/val'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', scale=(2048, 1024), keep_ratio=True),
            dict(type='LoadAnnotations'),
            dict(type='PackSegInputs')
        ]))
test_dataloader = dict(
    batch_size=1,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='Safeforest23CompressedDataset',
        data_root=
        '/ofo-share/repos-david/Safeforest_CMU_data_dvc//data/site_Gascola/04_27_23/collect_04/processed_01/annotations/safeforest23_condensed',
        data_prefix=dict(img_path='img_dir/val', seg_map_path='ann_dir/val'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', scale=(2048, 1024), keep_ratio=True),
            dict(type='LoadAnnotations'),
            dict(type='PackSegInputs')
        ]))
val_evaluator = dict(type='IoUMetric', iou_metrics=['mIoU'])
test_evaluator = dict(type='IoUMetric', iou_metrics=['mIoU'])
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [
    dict(type='LocalVisBackend'),
    dict(
        type='WandbVisBackend',
        init_kwargs=dict(
            entity='safeforest-cmu',
            project='mmsegmentation_gascola',
            name=
            'segformer_mit-b0_8xb1-160k_safeforest_gascola_23_04_27_collect_04'
        ))
]
visualizer = dict(
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
        dict(
            type='WandbVisBackend',
            init_kwargs=dict(
                entity='safeforest-cmu',
                project='mmsegmentation_gascola',
                name=
                'segformer_mit-b0_8xb1-160k_safeforest_gascola_23_04_27_collect_04'
            ))
    ],
    name='visualizer')
log_processor = dict(by_epoch=False)
log_level = 'INFO'
load_from = None
resume = False
tta_model = dict(type='SegTTAModel')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)
optim_wrapper = dict(
    type='OptimWrapper',
    optimizer=dict(
        type='AdamW', lr=6e-05, betas=(0.9, 0.999), weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            pos_block=dict(decay_mult=0.0),
            norm=dict(decay_mult=0.0),
            head=dict(lr_mult=10.0))))
param_scheduler = [
    dict(
        type='LinearLR', start_factor=1e-06, by_epoch=False, begin=0,
        end=1500),
    dict(
        type='PolyLR',
        eta_min=0.0,
        power=1.0,
        begin=1500,
        end=20000,
        by_epoch=False)
]
train_cfg = dict(type='IterBasedTrainLoop', max_iters=20000, val_interval=2000)
val_cfg = dict(type='ValLoop')
test_cfg = dict(type='TestLoop')
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=50, log_metric_by_epoch=False),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(type='CheckpointHook', by_epoch=False, interval=2000),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='SegVisualizationHook'))
launcher = 'none'
work_dir = './work_dirs/segformer_mit-b5_8xb1-20k_safeforest_gascola_23_04_27_collect_04_compressed-1024x1024'

2023/06/09 21:24:02 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/06/09 21:24:02 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train:
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.0.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.0.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.0.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.0.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.0.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.0.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.0.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.0.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.0.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.0.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.0.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.0.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.0.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.0.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.0.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.0.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.0.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.0.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.0.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.0.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.0.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.0.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.0.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.0.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.1.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.1.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.1.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.1.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.1.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.1.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.1.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.1.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.1.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.1.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.1.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.1.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.1.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.1.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.1.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.1.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.1.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.1.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.2.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.2.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.2.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.2.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.2.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.2.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.2.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.2.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.2.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.2.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.2.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.2.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.2.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.2.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.2.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.2.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.2.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.0.1.2.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.0.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.0.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.0.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.0.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.0.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.0.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.0.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.0.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.0.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.0.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.0.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.0.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.0.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.0.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.0.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.0.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.0.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.0.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.1.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.1.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.1.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.1.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.1.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.1.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.1.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.1.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.1.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.1.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.1.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.1.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.1.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.1.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.1.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.1.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.1.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.1.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.2.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.2.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.2.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.2.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.2.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.2.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.2.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.2.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.2.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.2.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.2.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.2.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.2.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.2.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.2.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.2.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.2.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.2.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.3.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.3.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.3.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.3.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.3.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.3.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.3.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.3.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.3.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.3.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.3.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.3.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.3.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.3.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.3.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.3.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.3.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.3.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.4.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.4.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.4.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.4.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.4.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.4.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.4.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.4.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.4.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.4.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.4.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.4.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.4.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.4.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.4.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.4.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.4.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.4.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.5.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.5.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.5.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.5.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.5.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.5.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.5.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.5.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.5.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.5.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.5.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.5.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.5.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.5.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.5.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.5.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.5.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.5.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.0.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.0.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.0.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.0.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.0.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.0.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.0.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.0.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.0.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.0.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.0.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.0.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.0.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.0.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.0.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.0.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.0.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.0.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.1.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.1.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.1.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.1.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.1.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.1.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.1.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.1.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.1.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.1.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.1.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.1.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.1.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.1.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.1.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.1.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.1.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.1.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.2.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.2.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.2.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.2.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.2.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.2.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.2.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.2.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.2.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.2.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.2.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.2.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.2.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.2.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.2.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.2.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.2.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.2.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.3.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.3.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.3.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.3.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.3.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.3.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.3.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.3.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.3.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.3.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.3.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.3.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.3.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.3.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.3.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.3.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.3.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.3.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.4.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.4.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.4.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.4.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.4.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.4.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.4.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.4.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.4.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.4.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.4.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.4.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.4.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.4.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.4.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.4.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.4.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.4.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.5.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.5.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.5.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.5.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.5.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.5.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.5.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.5.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.5.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.5.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.5.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.5.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.5.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.5.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.5.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.5.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.5.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.5.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.6.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.6.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.6.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.6.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.6.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.6.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.6.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.6.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.6.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.6.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.6.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.6.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.6.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.6.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.6.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.6.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.6.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.6.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.7.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.7.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.7.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.7.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.7.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.7.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.7.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.7.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.7.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.7.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.7.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.7.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.7.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.7.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.7.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.7.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.7.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.7.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.8.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.8.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.8.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.8.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.8.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.8.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.8.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.8.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.8.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.8.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.8.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.8.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.8.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.8.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.8.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.8.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.8.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.8.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.9.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.9.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.9.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.9.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.9.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.9.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.9.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.9.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.9.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.9.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.9.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.9.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.9.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.9.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.9.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.9.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.9.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.9.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.10.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.10.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.10.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.10.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.10.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.10.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.10.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.10.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.10.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.10.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.10.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.10.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.10.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.10.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.10.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.10.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.10.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.10.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.11.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.11.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.11.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.11.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.11.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.11.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.11.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.11.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.11.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.11.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.11.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.11.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.11.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.11.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.11.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.11.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.11.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.11.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.12.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.12.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.12.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.12.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.12.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.12.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.12.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.12.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.12.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.12.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.12.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.12.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.12.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.12.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.12.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.12.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.12.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.12.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.13.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.13.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.13.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.13.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.13.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.13.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.13.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.13.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.13.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.13.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.13.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.13.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.13.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.13.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.13.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.13.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.13.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.13.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.14.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.14.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.14.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.14.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.14.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.14.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.14.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.14.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.14.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.14.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.14.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.14.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.14.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.14.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.14.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.14.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.14.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.14.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.15.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.15.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.15.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.15.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.15.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.15.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.15.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.15.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.15.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.15.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.15.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.15.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.15.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.15.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.15.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.15.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.15.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.15.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.16.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.16.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.16.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.16.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.16.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.16.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.16.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.16.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.16.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.16.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.16.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.16.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.16.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.16.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.16.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.16.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.16.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.16.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.17.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.17.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.17.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.17.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.17.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.17.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.17.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.17.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.17.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.17.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.17.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.17.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.17.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.17.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.17.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.17.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.17.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.17.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.18.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.18.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.18.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.18.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.18.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.18.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.18.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.18.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.18.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.18.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.18.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.18.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.18.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.18.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.18.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.18.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.18.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.18.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.19.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.19.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.19.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.19.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.19.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.19.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.19.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.19.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.19.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.19.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.19.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.19.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.19.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.19.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.19.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.19.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.19.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.19.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.20.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.20.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.20.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.20.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.20.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.20.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.20.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.20.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.20.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.20.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.20.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.20.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.20.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.20.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.20.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.20.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.20.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.20.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.21.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.21.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.21.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.21.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.21.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.21.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.21.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.21.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.21.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.21.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.21.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.21.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.21.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.21.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.21.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.21.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.21.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.21.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.22.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.22.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.22.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.22.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.22.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.22.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.22.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.22.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.22.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.22.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.22.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.22.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.22.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.22.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.22.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.22.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.22.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.22.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.23.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.23.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.23.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.23.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.23.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.23.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.23.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.23.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.23.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.23.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.23.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.23.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.23.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.23.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.23.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.23.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.23.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.23.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.24.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.24.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.24.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.24.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.24.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.24.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.24.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.24.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.24.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.24.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.24.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.24.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.24.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.24.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.24.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.24.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.24.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.24.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.25.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.25.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.25.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.25.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.25.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.25.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.25.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.25.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.25.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.25.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.25.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.25.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.25.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.25.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.25.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.25.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.25.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.25.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.26.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.26.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.26.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.26.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.26.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.26.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.26.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.26.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.26.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.26.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.26.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.26.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.26.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.26.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.26.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.26.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.26.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.26.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.27.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.27.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.27.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.27.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.27.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.27.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.27.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.27.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.27.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.27.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.27.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.27.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.27.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.27.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.27.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.27.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.27.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.27.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.28.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.28.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.28.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.28.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.28.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.28.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.28.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.28.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.28.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.28.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.28.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.28.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.28.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.28.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.28.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.28.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.28.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.28.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.29.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.29.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.29.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.29.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.29.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.29.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.29.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.29.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.29.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.29.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.29.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.29.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.29.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.29.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.29.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.29.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.29.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.29.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.30.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.30.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.30.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.30.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.30.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.30.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.30.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.30.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.30.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.30.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.30.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.30.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.30.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.30.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.30.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.30.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.30.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.30.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.31.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.31.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.31.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.31.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.31.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.31.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.31.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.31.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.31.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.31.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.31.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.31.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.31.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.31.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.31.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.31.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.31.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.31.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.32.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.32.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.32.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.32.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.32.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.32.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.32.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.32.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.32.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.32.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.32.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.32.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.32.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.32.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.32.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.32.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.32.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.32.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.33.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.33.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.33.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.33.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.33.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.33.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.33.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.33.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.33.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.33.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.33.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.33.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.33.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.33.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.33.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.33.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.33.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.33.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.34.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.34.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.34.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.34.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.34.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.34.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.34.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.34.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.34.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.34.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.34.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.34.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.34.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.34.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.34.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.34.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.34.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.34.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.35.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.35.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.35.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.35.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.35.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.35.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.35.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.35.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.35.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.35.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.35.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.35.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.35.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.35.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.35.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.35.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.35.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.35.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.36.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.36.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.36.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.36.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.36.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.36.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.36.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.36.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.36.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.36.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.36.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.36.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.36.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.36.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.36.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.36.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.36.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.36.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.37.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.37.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.37.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.37.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.37.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.37.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.37.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.37.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.37.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.37.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.37.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.37.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.37.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.37.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.37.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.37.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.37.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.37.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.38.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.38.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.38.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.38.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.38.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.38.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.38.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.38.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.38.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.38.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.38.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.38.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.38.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.38.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.38.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.38.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.38.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.38.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.39.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.39.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.39.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.39.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.39.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.39.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.39.attn.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.39.attn.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.39.attn.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.39.attn.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.39.attn.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.39.attn.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.39.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.39.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.39.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.39.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.39.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.39.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.norm.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.norm.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.norm.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.norm.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.norm.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.norm.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.0.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.0.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.0.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.0.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.0.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.0.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.0.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.0.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.0.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.0.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.0.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.0.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.1.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.1.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.1.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.1.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.1.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.1.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.1.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.1.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.1.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.1.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.1.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.1.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.2.norm1.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.2.norm1.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.2.norm1.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.2.norm1.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.2.norm1.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.2.norm1.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.2.norm2.weight:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.2.norm2.weight:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.2.norm2.weight:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.2.norm2.bias:lr=6e-05
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.2.norm2.bias:weight_decay=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.2.norm2.bias:decay_mult=0.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.conv_seg.weight:lr=0.0006000000000000001
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.conv_seg.weight:weight_decay=0.01
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.conv_seg.weight:lr_mult=10.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.conv_seg.bias:lr=0.0006000000000000001
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.conv_seg.bias:weight_decay=0.01
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.conv_seg.bias:lr_mult=10.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.0.conv.weight:lr=0.0006000000000000001
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.0.conv.weight:weight_decay=0.01
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.0.conv.weight:lr_mult=10.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.0.bn.weight:lr=0.0006000000000000001
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.0.bn.weight:weight_decay=0.01
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.0.bn.weight:lr_mult=10.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.0.bn.bias:lr=0.0006000000000000001
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.0.bn.bias:weight_decay=0.01
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.0.bn.bias:lr_mult=10.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.1.conv.weight:lr=0.0006000000000000001
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.1.conv.weight:weight_decay=0.01
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.1.conv.weight:lr_mult=10.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.1.bn.weight:lr=0.0006000000000000001
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.1.bn.weight:weight_decay=0.01
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.1.bn.weight:lr_mult=10.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.1.bn.bias:lr=0.0006000000000000001
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.1.bn.bias:weight_decay=0.01
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.1.bn.bias:lr_mult=10.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.2.conv.weight:lr=0.0006000000000000001
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.2.conv.weight:weight_decay=0.01
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.2.conv.weight:lr_mult=10.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.2.bn.weight:lr=0.0006000000000000001
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.2.bn.weight:weight_decay=0.01
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.2.bn.weight:lr_mult=10.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.2.bn.bias:lr=0.0006000000000000001
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.2.bn.bias:weight_decay=0.01
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.2.bn.bias:lr_mult=10.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.3.conv.weight:lr=0.0006000000000000001
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.3.conv.weight:weight_decay=0.01
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.3.conv.weight:lr_mult=10.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.3.bn.weight:lr=0.0006000000000000001
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.3.bn.weight:weight_decay=0.01
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.3.bn.weight:lr_mult=10.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.3.bn.bias:lr=0.0006000000000000001
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.3.bn.bias:weight_decay=0.01
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.convs.3.bn.bias:lr_mult=10.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.fusion_conv.conv.weight:lr=0.0006000000000000001
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.fusion_conv.conv.weight:weight_decay=0.01
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.fusion_conv.conv.weight:lr_mult=10.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.fusion_conv.bn.weight:lr=0.0006000000000000001
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.fusion_conv.bn.weight:weight_decay=0.01
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.fusion_conv.bn.weight:lr_mult=10.0
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.fusion_conv.bn.bias:lr=0.0006000000000000001
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.fusion_conv.bn.bias:weight_decay=0.01
2023/06/09 21:24:04 - mmengine - INFO - paramwise_options -- decode_head.fusion_conv.bn.bias:lr_mult=10.0
2023/06/09 21:24:04 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
2023/06/09 21:24:06 - mmengine - INFO - load model from: pretrain/mit_b5.pth
2023/06/09 21:24:06 - mmengine - INFO - Loads checkpoint by local backend from path: pretrain/mit_b5.pth
2023/06/09 21:24:07 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: backbone.layers.0.0.projection.weight, backbone.layers.0.0.projection.bias, backbone.layers.0.0.norm.weight, backbone.layers.0.0.norm.bias, backbone.layers.0.1.0.norm1.weight, backbone.layers.0.1.0.norm1.bias, backbone.layers.0.1.0.attn.attn.in_proj_weight, backbone.layers.0.1.0.attn.attn.in_proj_bias, backbone.layers.0.1.0.attn.attn.out_proj.weight, backbone.layers.0.1.0.attn.attn.out_proj.bias, backbone.layers.0.1.0.attn.sr.weight, backbone.layers.0.1.0.attn.sr.bias, backbone.layers.0.1.0.attn.norm.weight, backbone.layers.0.1.0.attn.norm.bias, backbone.layers.0.1.0.norm2.weight, backbone.layers.0.1.0.norm2.bias, backbone.layers.0.1.0.ffn.layers.0.weight, backbone.layers.0.1.0.ffn.layers.0.bias, backbone.layers.0.1.0.ffn.layers.1.weight, backbone.layers.0.1.0.ffn.layers.1.bias, backbone.layers.0.1.0.ffn.layers.4.weight, backbone.layers.0.1.0.ffn.layers.4.bias, backbone.layers.0.1.1.norm1.weight, backbone.layers.0.1.1.norm1.bias, backbone.layers.0.1.1.attn.attn.in_proj_weight, backbone.layers.0.1.1.attn.attn.in_proj_bias, backbone.layers.0.1.1.attn.attn.out_proj.weight, backbone.layers.0.1.1.attn.attn.out_proj.bias, backbone.layers.0.1.1.attn.sr.weight, backbone.layers.0.1.1.attn.sr.bias, backbone.layers.0.1.1.attn.norm.weight, backbone.layers.0.1.1.attn.norm.bias, backbone.layers.0.1.1.norm2.weight, backbone.layers.0.1.1.norm2.bias, backbone.layers.0.1.1.ffn.layers.0.weight, backbone.layers.0.1.1.ffn.layers.0.bias, backbone.layers.0.1.1.ffn.layers.1.weight, backbone.layers.0.1.1.ffn.layers.1.bias, backbone.layers.0.1.1.ffn.layers.4.weight, backbone.layers.0.1.1.ffn.layers.4.bias, backbone.layers.0.1.2.norm1.weight, backbone.layers.0.1.2.norm1.bias, backbone.layers.0.1.2.attn.attn.in_proj_weight, backbone.layers.0.1.2.attn.attn.in_proj_bias, backbone.layers.0.1.2.attn.attn.out_proj.weight, backbone.layers.0.1.2.attn.attn.out_proj.bias, backbone.layers.0.1.2.attn.sr.weight, backbone.layers.0.1.2.attn.sr.bias, backbone.layers.0.1.2.attn.norm.weight, backbone.layers.0.1.2.attn.norm.bias, backbone.layers.0.1.2.norm2.weight, backbone.layers.0.1.2.norm2.bias, backbone.layers.0.1.2.ffn.layers.0.weight, backbone.layers.0.1.2.ffn.layers.0.bias, backbone.layers.0.1.2.ffn.layers.1.weight, backbone.layers.0.1.2.ffn.layers.1.bias, backbone.layers.0.1.2.ffn.layers.4.weight, backbone.layers.0.1.2.ffn.layers.4.bias, backbone.layers.0.2.weight, backbone.layers.0.2.bias, backbone.layers.1.0.projection.weight, backbone.layers.1.0.projection.bias, backbone.layers.1.0.norm.weight, backbone.layers.1.0.norm.bias, backbone.layers.1.1.0.norm1.weight, backbone.layers.1.1.0.norm1.bias, backbone.layers.1.1.0.attn.attn.in_proj_weight, backbone.layers.1.1.0.attn.attn.in_proj_bias, backbone.layers.1.1.0.attn.attn.out_proj.weight, backbone.layers.1.1.0.attn.attn.out_proj.bias, backbone.layers.1.1.0.attn.sr.weight, backbone.layers.1.1.0.attn.sr.bias, backbone.layers.1.1.0.attn.norm.weight, backbone.layers.1.1.0.attn.norm.bias, backbone.layers.1.1.0.norm2.weight, backbone.layers.1.1.0.norm2.bias, backbone.layers.1.1.0.ffn.layers.0.weight, backbone.layers.1.1.0.ffn.layers.0.bias, backbone.layers.1.1.0.ffn.layers.1.weight, backbone.layers.1.1.0.ffn.layers.1.bias, backbone.layers.1.1.0.ffn.layers.4.weight, backbone.layers.1.1.0.ffn.layers.4.bias, backbone.layers.1.1.1.norm1.weight, backbone.layers.1.1.1.norm1.bias, backbone.layers.1.1.1.attn.attn.in_proj_weight, backbone.layers.1.1.1.attn.attn.in_proj_bias, backbone.layers.1.1.1.attn.attn.out_proj.weight, backbone.layers.1.1.1.attn.attn.out_proj.bias, backbone.layers.1.1.1.attn.sr.weight, backbone.layers.1.1.1.attn.sr.bias, backbone.layers.1.1.1.attn.norm.weight, backbone.layers.1.1.1.attn.norm.bias, backbone.layers.1.1.1.norm2.weight, backbone.layers.1.1.1.norm2.bias, backbone.layers.1.1.1.ffn.layers.0.weight, backbone.layers.1.1.1.ffn.layers.0.bias, backbone.layers.1.1.1.ffn.layers.1.weight, backbone.layers.1.1.1.ffn.layers.1.bias, backbone.layers.1.1.1.ffn.layers.4.weight, backbone.layers.1.1.1.ffn.layers.4.bias, backbone.layers.1.1.2.norm1.weight, backbone.layers.1.1.2.norm1.bias, backbone.layers.1.1.2.attn.attn.in_proj_weight, backbone.layers.1.1.2.attn.attn.in_proj_bias, backbone.layers.1.1.2.attn.attn.out_proj.weight, backbone.layers.1.1.2.attn.attn.out_proj.bias, backbone.layers.1.1.2.attn.sr.weight, backbone.layers.1.1.2.attn.sr.bias, backbone.layers.1.1.2.attn.norm.weight, backbone.layers.1.1.2.attn.norm.bias, backbone.layers.1.1.2.norm2.weight, backbone.layers.1.1.2.norm2.bias, backbone.layers.1.1.2.ffn.layers.0.weight, backbone.layers.1.1.2.ffn.layers.0.bias, backbone.layers.1.1.2.ffn.layers.1.weight, backbone.layers.1.1.2.ffn.layers.1.bias, backbone.layers.1.1.2.ffn.layers.4.weight, backbone.layers.1.1.2.ffn.layers.4.bias, backbone.layers.1.1.3.norm1.weight, backbone.layers.1.1.3.norm1.bias, backbone.layers.1.1.3.attn.attn.in_proj_weight, backbone.layers.1.1.3.attn.attn.in_proj_bias, backbone.layers.1.1.3.attn.attn.out_proj.weight, backbone.layers.1.1.3.attn.attn.out_proj.bias, backbone.layers.1.1.3.attn.sr.weight, backbone.layers.1.1.3.attn.sr.bias, backbone.layers.1.1.3.attn.norm.weight, backbone.layers.1.1.3.attn.norm.bias, backbone.layers.1.1.3.norm2.weight, backbone.layers.1.1.3.norm2.bias, backbone.layers.1.1.3.ffn.layers.0.weight, backbone.layers.1.1.3.ffn.layers.0.bias, backbone.layers.1.1.3.ffn.layers.1.weight, backbone.layers.1.1.3.ffn.layers.1.bias, backbone.layers.1.1.3.ffn.layers.4.weight, backbone.layers.1.1.3.ffn.layers.4.bias, backbone.layers.1.1.4.norm1.weight, backbone.layers.1.1.4.norm1.bias, backbone.layers.1.1.4.attn.attn.in_proj_weight, backbone.layers.1.1.4.attn.attn.in_proj_bias, backbone.layers.1.1.4.attn.attn.out_proj.weight, backbone.layers.1.1.4.attn.attn.out_proj.bias, backbone.layers.1.1.4.attn.sr.weight, backbone.layers.1.1.4.attn.sr.bias, backbone.layers.1.1.4.attn.norm.weight, backbone.layers.1.1.4.attn.norm.bias, backbone.layers.1.1.4.norm2.weight, backbone.layers.1.1.4.norm2.bias, backbone.layers.1.1.4.ffn.layers.0.weight, backbone.layers.1.1.4.ffn.layers.0.bias, backbone.layers.1.1.4.ffn.layers.1.weight, backbone.layers.1.1.4.ffn.layers.1.bias, backbone.layers.1.1.4.ffn.layers.4.weight, backbone.layers.1.1.4.ffn.layers.4.bias, backbone.layers.1.1.5.norm1.weight, backbone.layers.1.1.5.norm1.bias, backbone.layers.1.1.5.attn.attn.in_proj_weight, backbone.layers.1.1.5.attn.attn.in_proj_bias, backbone.layers.1.1.5.attn.attn.out_proj.weight, backbone.layers.1.1.5.attn.attn.out_proj.bias, backbone.layers.1.1.5.attn.sr.weight, backbone.layers.1.1.5.attn.sr.bias, backbone.layers.1.1.5.attn.norm.weight, backbone.layers.1.1.5.attn.norm.bias, backbone.layers.1.1.5.norm2.weight, backbone.layers.1.1.5.norm2.bias, backbone.layers.1.1.5.ffn.layers.0.weight, backbone.layers.1.1.5.ffn.layers.0.bias, backbone.layers.1.1.5.ffn.layers.1.weight, backbone.layers.1.1.5.ffn.layers.1.bias, backbone.layers.1.1.5.ffn.layers.4.weight, backbone.layers.1.1.5.ffn.layers.4.bias, backbone.layers.1.2.weight, backbone.layers.1.2.bias, backbone.layers.2.0.projection.weight, backbone.layers.2.0.projection.bias, backbone.layers.2.0.norm.weight, backbone.layers.2.0.norm.bias, backbone.layers.2.1.0.norm1.weight, backbone.layers.2.1.0.norm1.bias, backbone.layers.2.1.0.attn.attn.in_proj_weight, backbone.layers.2.1.0.attn.attn.in_proj_bias, backbone.layers.2.1.0.attn.attn.out_proj.weight, backbone.layers.2.1.0.attn.attn.out_proj.bias, backbone.layers.2.1.0.attn.sr.weight, backbone.layers.2.1.0.attn.sr.bias, backbone.layers.2.1.0.attn.norm.weight, backbone.layers.2.1.0.attn.norm.bias, backbone.layers.2.1.0.norm2.weight, backbone.layers.2.1.0.norm2.bias, backbone.layers.2.1.0.ffn.layers.0.weight, backbone.layers.2.1.0.ffn.layers.0.bias, backbone.layers.2.1.0.ffn.layers.1.weight, backbone.layers.2.1.0.ffn.layers.1.bias, backbone.layers.2.1.0.ffn.layers.4.weight, backbone.layers.2.1.0.ffn.layers.4.bias, backbone.layers.2.1.1.norm1.weight, backbone.layers.2.1.1.norm1.bias, backbone.layers.2.1.1.attn.attn.in_proj_weight, backbone.layers.2.1.1.attn.attn.in_proj_bias, backbone.layers.2.1.1.attn.attn.out_proj.weight, backbone.layers.2.1.1.attn.attn.out_proj.bias, backbone.layers.2.1.1.attn.sr.weight, backbone.layers.2.1.1.attn.sr.bias, backbone.layers.2.1.1.attn.norm.weight, backbone.layers.2.1.1.attn.norm.bias, backbone.layers.2.1.1.norm2.weight, backbone.layers.2.1.1.norm2.bias, backbone.layers.2.1.1.ffn.layers.0.weight, backbone.layers.2.1.1.ffn.layers.0.bias, backbone.layers.2.1.1.ffn.layers.1.weight, backbone.layers.2.1.1.ffn.layers.1.bias, backbone.layers.2.1.1.ffn.layers.4.weight, backbone.layers.2.1.1.ffn.layers.4.bias, backbone.layers.2.1.2.norm1.weight, backbone.layers.2.1.2.norm1.bias, backbone.layers.2.1.2.attn.attn.in_proj_weight, backbone.layers.2.1.2.attn.attn.in_proj_bias, backbone.layers.2.1.2.attn.attn.out_proj.weight, backbone.layers.2.1.2.attn.attn.out_proj.bias, backbone.layers.2.1.2.attn.sr.weight, backbone.layers.2.1.2.attn.sr.bias, backbone.layers.2.1.2.attn.norm.weight, backbone.layers.2.1.2.attn.norm.bias, backbone.layers.2.1.2.norm2.weight, backbone.layers.2.1.2.norm2.bias, backbone.layers.2.1.2.ffn.layers.0.weight, backbone.layers.2.1.2.ffn.layers.0.bias, backbone.layers.2.1.2.ffn.layers.1.weight, backbone.layers.2.1.2.ffn.layers.1.bias, backbone.layers.2.1.2.ffn.layers.4.weight, backbone.layers.2.1.2.ffn.layers.4.bias, backbone.layers.2.1.3.norm1.weight, backbone.layers.2.1.3.norm1.bias, backbone.layers.2.1.3.attn.attn.in_proj_weight, backbone.layers.2.1.3.attn.attn.in_proj_bias, backbone.layers.2.1.3.attn.attn.out_proj.weight, backbone.layers.2.1.3.attn.attn.out_proj.bias, backbone.layers.2.1.3.attn.sr.weight, backbone.layers.2.1.3.attn.sr.bias, backbone.layers.2.1.3.attn.norm.weight, backbone.layers.2.1.3.attn.norm.bias, backbone.layers.2.1.3.norm2.weight, backbone.layers.2.1.3.norm2.bias, backbone.layers.2.1.3.ffn.layers.0.weight, backbone.layers.2.1.3.ffn.layers.0.bias, backbone.layers.2.1.3.ffn.layers.1.weight, backbone.layers.2.1.3.ffn.layers.1.bias, backbone.layers.2.1.3.ffn.layers.4.weight, backbone.layers.2.1.3.ffn.layers.4.bias, backbone.layers.2.1.4.norm1.weight, backbone.layers.2.1.4.norm1.bias, backbone.layers.2.1.4.attn.attn.in_proj_weight, backbone.layers.2.1.4.attn.attn.in_proj_bias, backbone.layers.2.1.4.attn.attn.out_proj.weight, backbone.layers.2.1.4.attn.attn.out_proj.bias, backbone.layers.2.1.4.attn.sr.weight, backbone.layers.2.1.4.attn.sr.bias, backbone.layers.2.1.4.attn.norm.weight, backbone.layers.2.1.4.attn.norm.bias, backbone.layers.2.1.4.norm2.weight, backbone.layers.2.1.4.norm2.bias, backbone.layers.2.1.4.ffn.layers.0.weight, backbone.layers.2.1.4.ffn.layers.0.bias, backbone.layers.2.1.4.ffn.layers.1.weight, backbone.layers.2.1.4.ffn.layers.1.bias, backbone.layers.2.1.4.ffn.layers.4.weight, backbone.layers.2.1.4.ffn.layers.4.bias, backbone.layers.2.1.5.norm1.weight, backbone.layers.2.1.5.norm1.bias, backbone.layers.2.1.5.attn.attn.in_proj_weight, backbone.layers.2.1.5.attn.attn.in_proj_bias, backbone.layers.2.1.5.attn.attn.out_proj.weight, backbone.layers.2.1.5.attn.attn.out_proj.bias, backbone.layers.2.1.5.attn.sr.weight, backbone.layers.2.1.5.attn.sr.bias, backbone.layers.2.1.5.attn.norm.weight, backbone.layers.2.1.5.attn.norm.bias, backbone.layers.2.1.5.norm2.weight, backbone.layers.2.1.5.norm2.bias, backbone.layers.2.1.5.ffn.layers.0.weight, backbone.layers.2.1.5.ffn.layers.0.bias, backbone.layers.2.1.5.ffn.layers.1.weight, backbone.layers.2.1.5.ffn.layers.1.bias, backbone.layers.2.1.5.ffn.layers.4.weight, backbone.layers.2.1.5.ffn.layers.4.bias, backbone.layers.2.1.6.norm1.weight, backbone.layers.2.1.6.norm1.bias, backbone.layers.2.1.6.attn.attn.in_proj_weight, backbone.layers.2.1.6.attn.attn.in_proj_bias, backbone.layers.2.1.6.attn.attn.out_proj.weight, backbone.layers.2.1.6.attn.attn.out_proj.bias, backbone.layers.2.1.6.attn.sr.weight, backbone.layers.2.1.6.attn.sr.bias, backbone.layers.2.1.6.attn.norm.weight, backbone.layers.2.1.6.attn.norm.bias, backbone.layers.2.1.6.norm2.weight, backbone.layers.2.1.6.norm2.bias, backbone.layers.2.1.6.ffn.layers.0.weight, backbone.layers.2.1.6.ffn.layers.0.bias, backbone.layers.2.1.6.ffn.layers.1.weight, backbone.layers.2.1.6.ffn.layers.1.bias, backbone.layers.2.1.6.ffn.layers.4.weight, backbone.layers.2.1.6.ffn.layers.4.bias, backbone.layers.2.1.7.norm1.weight, backbone.layers.2.1.7.norm1.bias, backbone.layers.2.1.7.attn.attn.in_proj_weight, backbone.layers.2.1.7.attn.attn.in_proj_bias, backbone.layers.2.1.7.attn.attn.out_proj.weight, backbone.layers.2.1.7.attn.attn.out_proj.bias, backbone.layers.2.1.7.attn.sr.weight, backbone.layers.2.1.7.attn.sr.bias, backbone.layers.2.1.7.attn.norm.weight, backbone.layers.2.1.7.attn.norm.bias, backbone.layers.2.1.7.norm2.weight, backbone.layers.2.1.7.norm2.bias, backbone.layers.2.1.7.ffn.layers.0.weight, backbone.layers.2.1.7.ffn.layers.0.bias, backbone.layers.2.1.7.ffn.layers.1.weight, backbone.layers.2.1.7.ffn.layers.1.bias, backbone.layers.2.1.7.ffn.layers.4.weight, backbone.layers.2.1.7.ffn.layers.4.bias, backbone.layers.2.1.8.norm1.weight, backbone.layers.2.1.8.norm1.bias, backbone.layers.2.1.8.attn.attn.in_proj_weight, backbone.layers.2.1.8.attn.attn.in_proj_bias, backbone.layers.2.1.8.attn.attn.out_proj.weight, backbone.layers.2.1.8.attn.attn.out_proj.bias, backbone.layers.2.1.8.attn.sr.weight, backbone.layers.2.1.8.attn.sr.bias, backbone.layers.2.1.8.attn.norm.weight, backbone.layers.2.1.8.attn.norm.bias, backbone.layers.2.1.8.norm2.weight, backbone.layers.2.1.8.norm2.bias, backbone.layers.2.1.8.ffn.layers.0.weight, backbone.layers.2.1.8.ffn.layers.0.bias, backbone.layers.2.1.8.ffn.layers.1.weight, backbone.layers.2.1.8.ffn.layers.1.bias, backbone.layers.2.1.8.ffn.layers.4.weight, backbone.layers.2.1.8.ffn.layers.4.bias, backbone.layers.2.1.9.norm1.weight, backbone.layers.2.1.9.norm1.bias, backbone.layers.2.1.9.attn.attn.in_proj_weight, backbone.layers.2.1.9.attn.attn.in_proj_bias, backbone.layers.2.1.9.attn.attn.out_proj.weight, backbone.layers.2.1.9.attn.attn.out_proj.bias, backbone.layers.2.1.9.attn.sr.weight, backbone.layers.2.1.9.attn.sr.bias, backbone.layers.2.1.9.attn.norm.weight, backbone.layers.2.1.9.attn.norm.bias, backbone.layers.2.1.9.norm2.weight, backbone.layers.2.1.9.norm2.bias, backbone.layers.2.1.9.ffn.layers.0.weight, backbone.layers.2.1.9.ffn.layers.0.bias, backbone.layers.2.1.9.ffn.layers.1.weight, backbone.layers.2.1.9.ffn.layers.1.bias, backbone.layers.2.1.9.ffn.layers.4.weight, backbone.layers.2.1.9.ffn.layers.4.bias, backbone.layers.2.1.10.norm1.weight, backbone.layers.2.1.10.norm1.bias, backbone.layers.2.1.10.attn.attn.in_proj_weight, backbone.layers.2.1.10.attn.attn.in_proj_bias, backbone.layers.2.1.10.attn.attn.out_proj.weight, backbone.layers.2.1.10.attn.attn.out_proj.bias, backbone.layers.2.1.10.attn.sr.weight, backbone.layers.2.1.10.attn.sr.bias, backbone.layers.2.1.10.attn.norm.weight, backbone.layers.2.1.10.attn.norm.bias, backbone.layers.2.1.10.norm2.weight, backbone.layers.2.1.10.norm2.bias, backbone.layers.2.1.10.ffn.layers.0.weight, backbone.layers.2.1.10.ffn.layers.0.bias, backbone.layers.2.1.10.ffn.layers.1.weight, backbone.layers.2.1.10.ffn.layers.1.bias, backbone.layers.2.1.10.ffn.layers.4.weight, backbone.layers.2.1.10.ffn.layers.4.bias, backbone.layers.2.1.11.norm1.weight, backbone.layers.2.1.11.norm1.bias, backbone.layers.2.1.11.attn.attn.in_proj_weight, backbone.layers.2.1.11.attn.attn.in_proj_bias, backbone.layers.2.1.11.attn.attn.out_proj.weight, backbone.layers.2.1.11.attn.attn.out_proj.bias, backbone.layers.2.1.11.attn.sr.weight, backbone.layers.2.1.11.attn.sr.bias, backbone.layers.2.1.11.attn.norm.weight, backbone.layers.2.1.11.attn.norm.bias, backbone.layers.2.1.11.norm2.weight, backbone.layers.2.1.11.norm2.bias, backbone.layers.2.1.11.ffn.layers.0.weight, backbone.layers.2.1.11.ffn.layers.0.bias, backbone.layers.2.1.11.ffn.layers.1.weight, backbone.layers.2.1.11.ffn.layers.1.bias, backbone.layers.2.1.11.ffn.layers.4.weight, backbone.layers.2.1.11.ffn.layers.4.bias, backbone.layers.2.1.12.norm1.weight, backbone.layers.2.1.12.norm1.bias, backbone.layers.2.1.12.attn.attn.in_proj_weight, backbone.layers.2.1.12.attn.attn.in_proj_bias, backbone.layers.2.1.12.attn.attn.out_proj.weight, backbone.layers.2.1.12.attn.attn.out_proj.bias, backbone.layers.2.1.12.attn.sr.weight, backbone.layers.2.1.12.attn.sr.bias, backbone.layers.2.1.12.attn.norm.weight, backbone.layers.2.1.12.attn.norm.bias, backbone.layers.2.1.12.norm2.weight, backbone.layers.2.1.12.norm2.bias, backbone.layers.2.1.12.ffn.layers.0.weight, backbone.layers.2.1.12.ffn.layers.0.bias, backbone.layers.2.1.12.ffn.layers.1.weight, backbone.layers.2.1.12.ffn.layers.1.bias, backbone.layers.2.1.12.ffn.layers.4.weight, backbone.layers.2.1.12.ffn.layers.4.bias, backbone.layers.2.1.13.norm1.weight, backbone.layers.2.1.13.norm1.bias, backbone.layers.2.1.13.attn.attn.in_proj_weight, backbone.layers.2.1.13.attn.attn.in_proj_bias, backbone.layers.2.1.13.attn.attn.out_proj.weight, backbone.layers.2.1.13.attn.attn.out_proj.bias, backbone.layers.2.1.13.attn.sr.weight, backbone.layers.2.1.13.attn.sr.bias, backbone.layers.2.1.13.attn.norm.weight, backbone.layers.2.1.13.attn.norm.bias, backbone.layers.2.1.13.norm2.weight, backbone.layers.2.1.13.norm2.bias, backbone.layers.2.1.13.ffn.layers.0.weight, backbone.layers.2.1.13.ffn.layers.0.bias, backbone.layers.2.1.13.ffn.layers.1.weight, backbone.layers.2.1.13.ffn.layers.1.bias, backbone.layers.2.1.13.ffn.layers.4.weight, backbone.layers.2.1.13.ffn.layers.4.bias, backbone.layers.2.1.14.norm1.weight, backbone.layers.2.1.14.norm1.bias, backbone.layers.2.1.14.attn.attn.in_proj_weight, backbone.layers.2.1.14.attn.attn.in_proj_bias, backbone.layers.2.1.14.attn.attn.out_proj.weight, backbone.layers.2.1.14.attn.attn.out_proj.bias, backbone.layers.2.1.14.attn.sr.weight, backbone.layers.2.1.14.attn.sr.bias, backbone.layers.2.1.14.attn.norm.weight, backbone.layers.2.1.14.attn.norm.bias, backbone.layers.2.1.14.norm2.weight, backbone.layers.2.1.14.norm2.bias, backbone.layers.2.1.14.ffn.layers.0.weight, backbone.layers.2.1.14.ffn.layers.0.bias, backbone.layers.2.1.14.ffn.layers.1.weight, backbone.layers.2.1.14.ffn.layers.1.bias, backbone.layers.2.1.14.ffn.layers.4.weight, backbone.layers.2.1.14.ffn.layers.4.bias, backbone.layers.2.1.15.norm1.weight, backbone.layers.2.1.15.norm1.bias, backbone.layers.2.1.15.attn.attn.in_proj_weight, backbone.layers.2.1.15.attn.attn.in_proj_bias, backbone.layers.2.1.15.attn.attn.out_proj.weight, backbone.layers.2.1.15.attn.attn.out_proj.bias, backbone.layers.2.1.15.attn.sr.weight, backbone.layers.2.1.15.attn.sr.bias, backbone.layers.2.1.15.attn.norm.weight, backbone.layers.2.1.15.attn.norm.bias, backbone.layers.2.1.15.norm2.weight, backbone.layers.2.1.15.norm2.bias, backbone.layers.2.1.15.ffn.layers.0.weight, backbone.layers.2.1.15.ffn.layers.0.bias, backbone.layers.2.1.15.ffn.layers.1.weight, backbone.layers.2.1.15.ffn.layers.1.bias, backbone.layers.2.1.15.ffn.layers.4.weight, backbone.layers.2.1.15.ffn.layers.4.bias, backbone.layers.2.1.16.norm1.weight, backbone.layers.2.1.16.norm1.bias, backbone.layers.2.1.16.attn.attn.in_proj_weight, backbone.layers.2.1.16.attn.attn.in_proj_bias, backbone.layers.2.1.16.attn.attn.out_proj.weight, backbone.layers.2.1.16.attn.attn.out_proj.bias, backbone.layers.2.1.16.attn.sr.weight, backbone.layers.2.1.16.attn.sr.bias, backbone.layers.2.1.16.attn.norm.weight, backbone.layers.2.1.16.attn.norm.bias, backbone.layers.2.1.16.norm2.weight, backbone.layers.2.1.16.norm2.bias, backbone.layers.2.1.16.ffn.layers.0.weight, backbone.layers.2.1.16.ffn.layers.0.bias, backbone.layers.2.1.16.ffn.layers.1.weight, backbone.layers.2.1.16.ffn.layers.1.bias, backbone.layers.2.1.16.ffn.layers.4.weight, backbone.layers.2.1.16.ffn.layers.4.bias, backbone.layers.2.1.17.norm1.weight, backbone.layers.2.1.17.norm1.bias, backbone.layers.2.1.17.attn.attn.in_proj_weight, backbone.layers.2.1.17.attn.attn.in_proj_bias, backbone.layers.2.1.17.attn.attn.out_proj.weight, backbone.layers.2.1.17.attn.attn.out_proj.bias, backbone.layers.2.1.17.attn.sr.weight, backbone.layers.2.1.17.attn.sr.bias, backbone.layers.2.1.17.attn.norm.weight, backbone.layers.2.1.17.attn.norm.bias, backbone.layers.2.1.17.norm2.weight, backbone.layers.2.1.17.norm2.bias, backbone.layers.2.1.17.ffn.layers.0.weight, backbone.layers.2.1.17.ffn.layers.0.bias, backbone.layers.2.1.17.ffn.layers.1.weight, backbone.layers.2.1.17.ffn.layers.1.bias, backbone.layers.2.1.17.ffn.layers.4.weight, backbone.layers.2.1.17.ffn.layers.4.bias, backbone.layers.2.1.18.norm1.weight, backbone.layers.2.1.18.norm1.bias, backbone.layers.2.1.18.attn.attn.in_proj_weight, backbone.layers.2.1.18.attn.attn.in_proj_bias, backbone.layers.2.1.18.attn.attn.out_proj.weight, backbone.layers.2.1.18.attn.attn.out_proj.bias, backbone.layers.2.1.18.attn.sr.weight, backbone.layers.2.1.18.attn.sr.bias, backbone.layers.2.1.18.attn.norm.weight, backbone.layers.2.1.18.attn.norm.bias, backbone.layers.2.1.18.norm2.weight, backbone.layers.2.1.18.norm2.bias, backbone.layers.2.1.18.ffn.layers.0.weight, backbone.layers.2.1.18.ffn.layers.0.bias, backbone.layers.2.1.18.ffn.layers.1.weight, backbone.layers.2.1.18.ffn.layers.1.bias, backbone.layers.2.1.18.ffn.layers.4.weight, backbone.layers.2.1.18.ffn.layers.4.bias, backbone.layers.2.1.19.norm1.weight, backbone.layers.2.1.19.norm1.bias, backbone.layers.2.1.19.attn.attn.in_proj_weight, backbone.layers.2.1.19.attn.attn.in_proj_bias, backbone.layers.2.1.19.attn.attn.out_proj.weight, backbone.layers.2.1.19.attn.attn.out_proj.bias, backbone.layers.2.1.19.attn.sr.weight, backbone.layers.2.1.19.attn.sr.bias, backbone.layers.2.1.19.attn.norm.weight, backbone.layers.2.1.19.attn.norm.bias, backbone.layers.2.1.19.norm2.weight, backbone.layers.2.1.19.norm2.bias, backbone.layers.2.1.19.ffn.layers.0.weight, backbone.layers.2.1.19.ffn.layers.0.bias, backbone.layers.2.1.19.ffn.layers.1.weight, backbone.layers.2.1.19.ffn.layers.1.bias, backbone.layers.2.1.19.ffn.layers.4.weight, backbone.layers.2.1.19.ffn.layers.4.bias, backbone.layers.2.1.20.norm1.weight, backbone.layers.2.1.20.norm1.bias, backbone.layers.2.1.20.attn.attn.in_proj_weight, backbone.layers.2.1.20.attn.attn.in_proj_bias, backbone.layers.2.1.20.attn.attn.out_proj.weight, backbone.layers.2.1.20.attn.attn.out_proj.bias, backbone.layers.2.1.20.attn.sr.weight, backbone.layers.2.1.20.attn.sr.bias, backbone.layers.2.1.20.attn.norm.weight, backbone.layers.2.1.20.attn.norm.bias, backbone.layers.2.1.20.norm2.weight, backbone.layers.2.1.20.norm2.bias, backbone.layers.2.1.20.ffn.layers.0.weight, backbone.layers.2.1.20.ffn.layers.0.bias, backbone.layers.2.1.20.ffn.layers.1.weight, backbone.layers.2.1.20.ffn.layers.1.bias, backbone.layers.2.1.20.ffn.layers.4.weight, backbone.layers.2.1.20.ffn.layers.4.bias, backbone.layers.2.1.21.norm1.weight, backbone.layers.2.1.21.norm1.bias, backbone.layers.2.1.21.attn.attn.in_proj_weight, backbone.layers.2.1.21.attn.attn.in_proj_bias, backbone.layers.2.1.21.attn.attn.out_proj.weight, backbone.layers.2.1.21.attn.attn.out_proj.bias, backbone.layers.2.1.21.attn.sr.weight, backbone.layers.2.1.21.attn.sr.bias, backbone.layers.2.1.21.attn.norm.weight, backbone.layers.2.1.21.attn.norm.bias, backbone.layers.2.1.21.norm2.weight, backbone.layers.2.1.21.norm2.bias, backbone.layers.2.1.21.ffn.layers.0.weight, backbone.layers.2.1.21.ffn.layers.0.bias, backbone.layers.2.1.21.ffn.layers.1.weight, backbone.layers.2.1.21.ffn.layers.1.bias, backbone.layers.2.1.21.ffn.layers.4.weight, backbone.layers.2.1.21.ffn.layers.4.bias, backbone.layers.2.1.22.norm1.weight, backbone.layers.2.1.22.norm1.bias, backbone.layers.2.1.22.attn.attn.in_proj_weight, backbone.layers.2.1.22.attn.attn.in_proj_bias, backbone.layers.2.1.22.attn.attn.out_proj.weight, backbone.layers.2.1.22.attn.attn.out_proj.bias, backbone.layers.2.1.22.attn.sr.weight, backbone.layers.2.1.22.attn.sr.bias, backbone.layers.2.1.22.attn.norm.weight, backbone.layers.2.1.22.attn.norm.bias, backbone.layers.2.1.22.norm2.weight, backbone.layers.2.1.22.norm2.bias, backbone.layers.2.1.22.ffn.layers.0.weight, backbone.layers.2.1.22.ffn.layers.0.bias, backbone.layers.2.1.22.ffn.layers.1.weight, backbone.layers.2.1.22.ffn.layers.1.bias, backbone.layers.2.1.22.ffn.layers.4.weight, backbone.layers.2.1.22.ffn.layers.4.bias, backbone.layers.2.1.23.norm1.weight, backbone.layers.2.1.23.norm1.bias, backbone.layers.2.1.23.attn.attn.in_proj_weight, backbone.layers.2.1.23.attn.attn.in_proj_bias, backbone.layers.2.1.23.attn.attn.out_proj.weight, backbone.layers.2.1.23.attn.attn.out_proj.bias, backbone.layers.2.1.23.attn.sr.weight, backbone.layers.2.1.23.attn.sr.bias, backbone.layers.2.1.23.attn.norm.weight, backbone.layers.2.1.23.attn.norm.bias, backbone.layers.2.1.23.norm2.weight, backbone.layers.2.1.23.norm2.bias, backbone.layers.2.1.23.ffn.layers.0.weight, backbone.layers.2.1.23.ffn.layers.0.bias, backbone.layers.2.1.23.ffn.layers.1.weight, backbone.layers.2.1.23.ffn.layers.1.bias, backbone.layers.2.1.23.ffn.layers.4.weight, backbone.layers.2.1.23.ffn.layers.4.bias, backbone.layers.2.1.24.norm1.weight, backbone.layers.2.1.24.norm1.bias, backbone.layers.2.1.24.attn.attn.in_proj_weight, backbone.layers.2.1.24.attn.attn.in_proj_bias, backbone.layers.2.1.24.attn.attn.out_proj.weight, backbone.layers.2.1.24.attn.attn.out_proj.bias, backbone.layers.2.1.24.attn.sr.weight, backbone.layers.2.1.24.attn.sr.bias, backbone.layers.2.1.24.attn.norm.weight, backbone.layers.2.1.24.attn.norm.bias, backbone.layers.2.1.24.norm2.weight, backbone.layers.2.1.24.norm2.bias, backbone.layers.2.1.24.ffn.layers.0.weight, backbone.layers.2.1.24.ffn.layers.0.bias, backbone.layers.2.1.24.ffn.layers.1.weight, backbone.layers.2.1.24.ffn.layers.1.bias, backbone.layers.2.1.24.ffn.layers.4.weight, backbone.layers.2.1.24.ffn.layers.4.bias, backbone.layers.2.1.25.norm1.weight, backbone.layers.2.1.25.norm1.bias, backbone.layers.2.1.25.attn.attn.in_proj_weight, backbone.layers.2.1.25.attn.attn.in_proj_bias, backbone.layers.2.1.25.attn.attn.out_proj.weight, backbone.layers.2.1.25.attn.attn.out_proj.bias, backbone.layers.2.1.25.attn.sr.weight, backbone.layers.2.1.25.attn.sr.bias, backbone.layers.2.1.25.attn.norm.weight, backbone.layers.2.1.25.attn.norm.bias, backbone.layers.2.1.25.norm2.weight, backbone.layers.2.1.25.norm2.bias, backbone.layers.2.1.25.ffn.layers.0.weight, backbone.layers.2.1.25.ffn.layers.0.bias, backbone.layers.2.1.25.ffn.layers.1.weight, backbone.layers.2.1.25.ffn.layers.1.bias, backbone.layers.2.1.25.ffn.layers.4.weight, backbone.layers.2.1.25.ffn.layers.4.bias, backbone.layers.2.1.26.norm1.weight, backbone.layers.2.1.26.norm1.bias, backbone.layers.2.1.26.attn.attn.in_proj_weight, backbone.layers.2.1.26.attn.attn.in_proj_bias, backbone.layers.2.1.26.attn.attn.out_proj.weight, backbone.layers.2.1.26.attn.attn.out_proj.bias, backbone.layers.2.1.26.attn.sr.weight, backbone.layers.2.1.26.attn.sr.bias, backbone.layers.2.1.26.attn.norm.weight, backbone.layers.2.1.26.attn.norm.bias, backbone.layers.2.1.26.norm2.weight, backbone.layers.2.1.26.norm2.bias, backbone.layers.2.1.26.ffn.layers.0.weight, backbone.layers.2.1.26.ffn.layers.0.bias, backbone.layers.2.1.26.ffn.layers.1.weight, backbone.layers.2.1.26.ffn.layers.1.bias, backbone.layers.2.1.26.ffn.layers.4.weight, backbone.layers.2.1.26.ffn.layers.4.bias, backbone.layers.2.1.27.norm1.weight, backbone.layers.2.1.27.norm1.bias, backbone.layers.2.1.27.attn.attn.in_proj_weight, backbone.layers.2.1.27.attn.attn.in_proj_bias, backbone.layers.2.1.27.attn.attn.out_proj.weight, backbone.layers.2.1.27.attn.attn.out_proj.bias, backbone.layers.2.1.27.attn.sr.weight, backbone.layers.2.1.27.attn.sr.bias, backbone.layers.2.1.27.attn.norm.weight, backbone.layers.2.1.27.attn.norm.bias, backbone.layers.2.1.27.norm2.weight, backbone.layers.2.1.27.norm2.bias, backbone.layers.2.1.27.ffn.layers.0.weight, backbone.layers.2.1.27.ffn.layers.0.bias, backbone.layers.2.1.27.ffn.layers.1.weight, backbone.layers.2.1.27.ffn.layers.1.bias, backbone.layers.2.1.27.ffn.layers.4.weight, backbone.layers.2.1.27.ffn.layers.4.bias, backbone.layers.2.1.28.norm1.weight, backbone.layers.2.1.28.norm1.bias, backbone.layers.2.1.28.attn.attn.in_proj_weight, backbone.layers.2.1.28.attn.attn.in_proj_bias, backbone.layers.2.1.28.attn.attn.out_proj.weight, backbone.layers.2.1.28.attn.attn.out_proj.bias, backbone.layers.2.1.28.attn.sr.weight, backbone.layers.2.1.28.attn.sr.bias, backbone.layers.2.1.28.attn.norm.weight, backbone.layers.2.1.28.attn.norm.bias, backbone.layers.2.1.28.norm2.weight, backbone.layers.2.1.28.norm2.bias, backbone.layers.2.1.28.ffn.layers.0.weight, backbone.layers.2.1.28.ffn.layers.0.bias, backbone.layers.2.1.28.ffn.layers.1.weight, backbone.layers.2.1.28.ffn.layers.1.bias, backbone.layers.2.1.28.ffn.layers.4.weight, backbone.layers.2.1.28.ffn.layers.4.bias, backbone.layers.2.1.29.norm1.weight, backbone.layers.2.1.29.norm1.bias, backbone.layers.2.1.29.attn.attn.in_proj_weight, backbone.layers.2.1.29.attn.attn.in_proj_bias, backbone.layers.2.1.29.attn.attn.out_proj.weight, backbone.layers.2.1.29.attn.attn.out_proj.bias, backbone.layers.2.1.29.attn.sr.weight, backbone.layers.2.1.29.attn.sr.bias, backbone.layers.2.1.29.attn.norm.weight, backbone.layers.2.1.29.attn.norm.bias, backbone.layers.2.1.29.norm2.weight, backbone.layers.2.1.29.norm2.bias, backbone.layers.2.1.29.ffn.layers.0.weight, backbone.layers.2.1.29.ffn.layers.0.bias, backbone.layers.2.1.29.ffn.layers.1.weight, backbone.layers.2.1.29.ffn.layers.1.bias, backbone.layers.2.1.29.ffn.layers.4.weight, backbone.layers.2.1.29.ffn.layers.4.bias, backbone.layers.2.1.30.norm1.weight, backbone.layers.2.1.30.norm1.bias, backbone.layers.2.1.30.attn.attn.in_proj_weight, backbone.layers.2.1.30.attn.attn.in_proj_bias, backbone.layers.2.1.30.attn.attn.out_proj.weight, backbone.layers.2.1.30.attn.attn.out_proj.bias, backbone.layers.2.1.30.attn.sr.weight, backbone.layers.2.1.30.attn.sr.bias, backbone.layers.2.1.30.attn.norm.weight, backbone.layers.2.1.30.attn.norm.bias, backbone.layers.2.1.30.norm2.weight, backbone.layers.2.1.30.norm2.bias, backbone.layers.2.1.30.ffn.layers.0.weight, backbone.layers.2.1.30.ffn.layers.0.bias, backbone.layers.2.1.30.ffn.layers.1.weight, backbone.layers.2.1.30.ffn.layers.1.bias, backbone.layers.2.1.30.ffn.layers.4.weight, backbone.layers.2.1.30.ffn.layers.4.bias, backbone.layers.2.1.31.norm1.weight, backbone.layers.2.1.31.norm1.bias, backbone.layers.2.1.31.attn.attn.in_proj_weight, backbone.layers.2.1.31.attn.attn.in_proj_bias, backbone.layers.2.1.31.attn.attn.out_proj.weight, backbone.layers.2.1.31.attn.attn.out_proj.bias, backbone.layers.2.1.31.attn.sr.weight, backbone.layers.2.1.31.attn.sr.bias, backbone.layers.2.1.31.attn.norm.weight, backbone.layers.2.1.31.attn.norm.bias, backbone.layers.2.1.31.norm2.weight, backbone.layers.2.1.31.norm2.bias, backbone.layers.2.1.31.ffn.layers.0.weight, backbone.layers.2.1.31.ffn.layers.0.bias, backbone.layers.2.1.31.ffn.layers.1.weight, backbone.layers.2.1.31.ffn.layers.1.bias, backbone.layers.2.1.31.ffn.layers.4.weight, backbone.layers.2.1.31.ffn.layers.4.bias, backbone.layers.2.1.32.norm1.weight, backbone.layers.2.1.32.norm1.bias, backbone.layers.2.1.32.attn.attn.in_proj_weight, backbone.layers.2.1.32.attn.attn.in_proj_bias, backbone.layers.2.1.32.attn.attn.out_proj.weight, backbone.layers.2.1.32.attn.attn.out_proj.bias, backbone.layers.2.1.32.attn.sr.weight, backbone.layers.2.1.32.attn.sr.bias, backbone.layers.2.1.32.attn.norm.weight, backbone.layers.2.1.32.attn.norm.bias, backbone.layers.2.1.32.norm2.weight, backbone.layers.2.1.32.norm2.bias, backbone.layers.2.1.32.ffn.layers.0.weight, backbone.layers.2.1.32.ffn.layers.0.bias, backbone.layers.2.1.32.ffn.layers.1.weight, backbone.layers.2.1.32.ffn.layers.1.bias, backbone.layers.2.1.32.ffn.layers.4.weight, backbone.layers.2.1.32.ffn.layers.4.bias, backbone.layers.2.1.33.norm1.weight, backbone.layers.2.1.33.norm1.bias, backbone.layers.2.1.33.attn.attn.in_proj_weight, backbone.layers.2.1.33.attn.attn.in_proj_bias, backbone.layers.2.1.33.attn.attn.out_proj.weight, backbone.layers.2.1.33.attn.attn.out_proj.bias, backbone.layers.2.1.33.attn.sr.weight, backbone.layers.2.1.33.attn.sr.bias, backbone.layers.2.1.33.attn.norm.weight, backbone.layers.2.1.33.attn.norm.bias, backbone.layers.2.1.33.norm2.weight, backbone.layers.2.1.33.norm2.bias, backbone.layers.2.1.33.ffn.layers.0.weight, backbone.layers.2.1.33.ffn.layers.0.bias, backbone.layers.2.1.33.ffn.layers.1.weight, backbone.layers.2.1.33.ffn.layers.1.bias, backbone.layers.2.1.33.ffn.layers.4.weight, backbone.layers.2.1.33.ffn.layers.4.bias, backbone.layers.2.1.34.norm1.weight, backbone.layers.2.1.34.norm1.bias, backbone.layers.2.1.34.attn.attn.in_proj_weight, backbone.layers.2.1.34.attn.attn.in_proj_bias, backbone.layers.2.1.34.attn.attn.out_proj.weight, backbone.layers.2.1.34.attn.attn.out_proj.bias, backbone.layers.2.1.34.attn.sr.weight, backbone.layers.2.1.34.attn.sr.bias, backbone.layers.2.1.34.attn.norm.weight, backbone.layers.2.1.34.attn.norm.bias, backbone.layers.2.1.34.norm2.weight, backbone.layers.2.1.34.norm2.bias, backbone.layers.2.1.34.ffn.layers.0.weight, backbone.layers.2.1.34.ffn.layers.0.bias, backbone.layers.2.1.34.ffn.layers.1.weight, backbone.layers.2.1.34.ffn.layers.1.bias, backbone.layers.2.1.34.ffn.layers.4.weight, backbone.layers.2.1.34.ffn.layers.4.bias, backbone.layers.2.1.35.norm1.weight, backbone.layers.2.1.35.norm1.bias, backbone.layers.2.1.35.attn.attn.in_proj_weight, backbone.layers.2.1.35.attn.attn.in_proj_bias, backbone.layers.2.1.35.attn.attn.out_proj.weight, backbone.layers.2.1.35.attn.attn.out_proj.bias, backbone.layers.2.1.35.attn.sr.weight, backbone.layers.2.1.35.attn.sr.bias, backbone.layers.2.1.35.attn.norm.weight, backbone.layers.2.1.35.attn.norm.bias, backbone.layers.2.1.35.norm2.weight, backbone.layers.2.1.35.norm2.bias, backbone.layers.2.1.35.ffn.layers.0.weight, backbone.layers.2.1.35.ffn.layers.0.bias, backbone.layers.2.1.35.ffn.layers.1.weight, backbone.layers.2.1.35.ffn.layers.1.bias, backbone.layers.2.1.35.ffn.layers.4.weight, backbone.layers.2.1.35.ffn.layers.4.bias, backbone.layers.2.1.36.norm1.weight, backbone.layers.2.1.36.norm1.bias, backbone.layers.2.1.36.attn.attn.in_proj_weight, backbone.layers.2.1.36.attn.attn.in_proj_bias, backbone.layers.2.1.36.attn.attn.out_proj.weight, backbone.layers.2.1.36.attn.attn.out_proj.bias, backbone.layers.2.1.36.attn.sr.weight, backbone.layers.2.1.36.attn.sr.bias, backbone.layers.2.1.36.attn.norm.weight, backbone.layers.2.1.36.attn.norm.bias, backbone.layers.2.1.36.norm2.weight, backbone.layers.2.1.36.norm2.bias, backbone.layers.2.1.36.ffn.layers.0.weight, backbone.layers.2.1.36.ffn.layers.0.bias, backbone.layers.2.1.36.ffn.layers.1.weight, backbone.layers.2.1.36.ffn.layers.1.bias, backbone.layers.2.1.36.ffn.layers.4.weight, backbone.layers.2.1.36.ffn.layers.4.bias, backbone.layers.2.1.37.norm1.weight, backbone.layers.2.1.37.norm1.bias, backbone.layers.2.1.37.attn.attn.in_proj_weight, backbone.layers.2.1.37.attn.attn.in_proj_bias, backbone.layers.2.1.37.attn.attn.out_proj.weight, backbone.layers.2.1.37.attn.attn.out_proj.bias, backbone.layers.2.1.37.attn.sr.weight, backbone.layers.2.1.37.attn.sr.bias, backbone.layers.2.1.37.attn.norm.weight, backbone.layers.2.1.37.attn.norm.bias, backbone.layers.2.1.37.norm2.weight, backbone.layers.2.1.37.norm2.bias, backbone.layers.2.1.37.ffn.layers.0.weight, backbone.layers.2.1.37.ffn.layers.0.bias, backbone.layers.2.1.37.ffn.layers.1.weight, backbone.layers.2.1.37.ffn.layers.1.bias, backbone.layers.2.1.37.ffn.layers.4.weight, backbone.layers.2.1.37.ffn.layers.4.bias, backbone.layers.2.1.38.norm1.weight, backbone.layers.2.1.38.norm1.bias, backbone.layers.2.1.38.attn.attn.in_proj_weight, backbone.layers.2.1.38.attn.attn.in_proj_bias, backbone.layers.2.1.38.attn.attn.out_proj.weight, backbone.layers.2.1.38.attn.attn.out_proj.bias, backbone.layers.2.1.38.attn.sr.weight, backbone.layers.2.1.38.attn.sr.bias, backbone.layers.2.1.38.attn.norm.weight, backbone.layers.2.1.38.attn.norm.bias, backbone.layers.2.1.38.norm2.weight, backbone.layers.2.1.38.norm2.bias, backbone.layers.2.1.38.ffn.layers.0.weight, backbone.layers.2.1.38.ffn.layers.0.bias, backbone.layers.2.1.38.ffn.layers.1.weight, backbone.layers.2.1.38.ffn.layers.1.bias, backbone.layers.2.1.38.ffn.layers.4.weight, backbone.layers.2.1.38.ffn.layers.4.bias, backbone.layers.2.1.39.norm1.weight, backbone.layers.2.1.39.norm1.bias, backbone.layers.2.1.39.attn.attn.in_proj_weight, backbone.layers.2.1.39.attn.attn.in_proj_bias, backbone.layers.2.1.39.attn.attn.out_proj.weight, backbone.layers.2.1.39.attn.attn.out_proj.bias, backbone.layers.2.1.39.attn.sr.weight, backbone.layers.2.1.39.attn.sr.bias, backbone.layers.2.1.39.attn.norm.weight, backbone.layers.2.1.39.attn.norm.bias, backbone.layers.2.1.39.norm2.weight, backbone.layers.2.1.39.norm2.bias, backbone.layers.2.1.39.ffn.layers.0.weight, backbone.layers.2.1.39.ffn.layers.0.bias, backbone.layers.2.1.39.ffn.layers.1.weight, backbone.layers.2.1.39.ffn.layers.1.bias, backbone.layers.2.1.39.ffn.layers.4.weight, backbone.layers.2.1.39.ffn.layers.4.bias, backbone.layers.2.2.weight, backbone.layers.2.2.bias, backbone.layers.3.0.projection.weight, backbone.layers.3.0.projection.bias, backbone.layers.3.0.norm.weight, backbone.layers.3.0.norm.bias, backbone.layers.3.1.0.norm1.weight, backbone.layers.3.1.0.norm1.bias, backbone.layers.3.1.0.attn.attn.in_proj_weight, backbone.layers.3.1.0.attn.attn.in_proj_bias, backbone.layers.3.1.0.attn.attn.out_proj.weight, backbone.layers.3.1.0.attn.attn.out_proj.bias, backbone.layers.3.1.0.norm2.weight, backbone.layers.3.1.0.norm2.bias, backbone.layers.3.1.0.ffn.layers.0.weight, backbone.layers.3.1.0.ffn.layers.0.bias, backbone.layers.3.1.0.ffn.layers.1.weight, backbone.layers.3.1.0.ffn.layers.1.bias, backbone.layers.3.1.0.ffn.layers.4.weight, backbone.layers.3.1.0.ffn.layers.4.bias, backbone.layers.3.1.1.norm1.weight, backbone.layers.3.1.1.norm1.bias, backbone.layers.3.1.1.attn.attn.in_proj_weight, backbone.layers.3.1.1.attn.attn.in_proj_bias, backbone.layers.3.1.1.attn.attn.out_proj.weight, backbone.layers.3.1.1.attn.attn.out_proj.bias, backbone.layers.3.1.1.norm2.weight, backbone.layers.3.1.1.norm2.bias, backbone.layers.3.1.1.ffn.layers.0.weight, backbone.layers.3.1.1.ffn.layers.0.bias, backbone.layers.3.1.1.ffn.layers.1.weight, backbone.layers.3.1.1.ffn.layers.1.bias, backbone.layers.3.1.1.ffn.layers.4.weight, backbone.layers.3.1.1.ffn.layers.4.bias, backbone.layers.3.1.2.norm1.weight, backbone.layers.3.1.2.norm1.bias, backbone.layers.3.1.2.attn.attn.in_proj_weight, backbone.layers.3.1.2.attn.attn.in_proj_bias, backbone.layers.3.1.2.attn.attn.out_proj.weight, backbone.layers.3.1.2.attn.attn.out_proj.bias, backbone.layers.3.1.2.norm2.weight, backbone.layers.3.1.2.norm2.bias, backbone.layers.3.1.2.ffn.layers.0.weight, backbone.layers.3.1.2.ffn.layers.0.bias, backbone.layers.3.1.2.ffn.layers.1.weight, backbone.layers.3.1.2.ffn.layers.1.bias, backbone.layers.3.1.2.ffn.layers.4.weight, backbone.layers.3.1.2.ffn.layers.4.bias, backbone.layers.3.2.weight, backbone.layers.3.2.bias, decode_head.conv_seg.weight, decode_head.conv_seg.bias, decode_head.convs.0.conv.weight, decode_head.convs.0.bn.weight, decode_head.convs.0.bn.bias, decode_head.convs.0.bn.running_mean, decode_head.convs.0.bn.running_var, decode_head.convs.0.bn.num_batches_tracked, decode_head.convs.1.conv.weight, decode_head.convs.1.bn.weight, decode_head.convs.1.bn.bias, decode_head.convs.1.bn.running_mean, decode_head.convs.1.bn.running_var, decode_head.convs.1.bn.num_batches_tracked, decode_head.convs.2.conv.weight, decode_head.convs.2.bn.weight, decode_head.convs.2.bn.bias, decode_head.convs.2.bn.running_mean, decode_head.convs.2.bn.running_var, decode_head.convs.2.bn.num_batches_tracked, decode_head.convs.3.conv.weight, decode_head.convs.3.bn.weight, decode_head.convs.3.bn.bias, decode_head.convs.3.bn.running_mean, decode_head.convs.3.bn.running_var, decode_head.convs.3.bn.num_batches_tracked, decode_head.fusion_conv.conv.weight, decode_head.fusion_conv.bn.weight, decode_head.fusion_conv.bn.bias, decode_head.fusion_conv.bn.running_mean, decode_head.fusion_conv.bn.running_var, decode_head.fusion_conv.bn.num_batches_tracked

missing keys in source state_dict: layers.0.0.projection.weight, layers.0.0.projection.bias, layers.0.0.norm.weight, layers.0.0.norm.bias, layers.0.1.0.norm1.weight, layers.0.1.0.norm1.bias, layers.0.1.0.attn.attn.in_proj_weight, layers.0.1.0.attn.attn.in_proj_bias, layers.0.1.0.attn.attn.out_proj.weight, layers.0.1.0.attn.attn.out_proj.bias, layers.0.1.0.attn.sr.weight, layers.0.1.0.attn.sr.bias, layers.0.1.0.attn.norm.weight, layers.0.1.0.attn.norm.bias, layers.0.1.0.norm2.weight, layers.0.1.0.norm2.bias, layers.0.1.0.ffn.layers.0.weight, layers.0.1.0.ffn.layers.0.bias, layers.0.1.0.ffn.layers.1.weight, layers.0.1.0.ffn.layers.1.bias, layers.0.1.0.ffn.layers.4.weight, layers.0.1.0.ffn.layers.4.bias, layers.0.1.1.norm1.weight, layers.0.1.1.norm1.bias, layers.0.1.1.attn.attn.in_proj_weight, layers.0.1.1.attn.attn.in_proj_bias, layers.0.1.1.attn.attn.out_proj.weight, layers.0.1.1.attn.attn.out_proj.bias, layers.0.1.1.attn.sr.weight, layers.0.1.1.attn.sr.bias, layers.0.1.1.attn.norm.weight, layers.0.1.1.attn.norm.bias, layers.0.1.1.norm2.weight, layers.0.1.1.norm2.bias, layers.0.1.1.ffn.layers.0.weight, layers.0.1.1.ffn.layers.0.bias, layers.0.1.1.ffn.layers.1.weight, layers.0.1.1.ffn.layers.1.bias, layers.0.1.1.ffn.layers.4.weight, layers.0.1.1.ffn.layers.4.bias, layers.0.1.2.norm1.weight, layers.0.1.2.norm1.bias, layers.0.1.2.attn.attn.in_proj_weight, layers.0.1.2.attn.attn.in_proj_bias, layers.0.1.2.attn.attn.out_proj.weight, layers.0.1.2.attn.attn.out_proj.bias, layers.0.1.2.attn.sr.weight, layers.0.1.2.attn.sr.bias, layers.0.1.2.attn.norm.weight, layers.0.1.2.attn.norm.bias, layers.0.1.2.norm2.weight, layers.0.1.2.norm2.bias, layers.0.1.2.ffn.layers.0.weight, layers.0.1.2.ffn.layers.0.bias, layers.0.1.2.ffn.layers.1.weight, layers.0.1.2.ffn.layers.1.bias, layers.0.1.2.ffn.layers.4.weight, layers.0.1.2.ffn.layers.4.bias, layers.0.2.weight, layers.0.2.bias, layers.1.0.projection.weight, layers.1.0.projection.bias, layers.1.0.norm.weight, layers.1.0.norm.bias, layers.1.1.0.norm1.weight, layers.1.1.0.norm1.bias, layers.1.1.0.attn.attn.in_proj_weight, layers.1.1.0.attn.attn.in_proj_bias, layers.1.1.0.attn.attn.out_proj.weight, layers.1.1.0.attn.attn.out_proj.bias, layers.1.1.0.attn.sr.weight, layers.1.1.0.attn.sr.bias, layers.1.1.0.attn.norm.weight, layers.1.1.0.attn.norm.bias, layers.1.1.0.norm2.weight, layers.1.1.0.norm2.bias, layers.1.1.0.ffn.layers.0.weight, layers.1.1.0.ffn.layers.0.bias, layers.1.1.0.ffn.layers.1.weight, layers.1.1.0.ffn.layers.1.bias, layers.1.1.0.ffn.layers.4.weight, layers.1.1.0.ffn.layers.4.bias, layers.1.1.1.norm1.weight, layers.1.1.1.norm1.bias, layers.1.1.1.attn.attn.in_proj_weight, layers.1.1.1.attn.attn.in_proj_bias, layers.1.1.1.attn.attn.out_proj.weight, layers.1.1.1.attn.attn.out_proj.bias, layers.1.1.1.attn.sr.weight, layers.1.1.1.attn.sr.bias, layers.1.1.1.attn.norm.weight, layers.1.1.1.attn.norm.bias, layers.1.1.1.norm2.weight, layers.1.1.1.norm2.bias, layers.1.1.1.ffn.layers.0.weight, layers.1.1.1.ffn.layers.0.bias, layers.1.1.1.ffn.layers.1.weight, layers.1.1.1.ffn.layers.1.bias, layers.1.1.1.ffn.layers.4.weight, layers.1.1.1.ffn.layers.4.bias, layers.1.1.2.norm1.weight, layers.1.1.2.norm1.bias, layers.1.1.2.attn.attn.in_proj_weight, layers.1.1.2.attn.attn.in_proj_bias, layers.1.1.2.attn.attn.out_proj.weight, layers.1.1.2.attn.attn.out_proj.bias, layers.1.1.2.attn.sr.weight, layers.1.1.2.attn.sr.bias, layers.1.1.2.attn.norm.weight, layers.1.1.2.attn.norm.bias, layers.1.1.2.norm2.weight, layers.1.1.2.norm2.bias, layers.1.1.2.ffn.layers.0.weight, layers.1.1.2.ffn.layers.0.bias, layers.1.1.2.ffn.layers.1.weight, layers.1.1.2.ffn.layers.1.bias, layers.1.1.2.ffn.layers.4.weight, layers.1.1.2.ffn.layers.4.bias, layers.1.1.3.norm1.weight, layers.1.1.3.norm1.bias, layers.1.1.3.attn.attn.in_proj_weight, layers.1.1.3.attn.attn.in_proj_bias, layers.1.1.3.attn.attn.out_proj.weight, layers.1.1.3.attn.attn.out_proj.bias, layers.1.1.3.attn.sr.weight, layers.1.1.3.attn.sr.bias, layers.1.1.3.attn.norm.weight, layers.1.1.3.attn.norm.bias, layers.1.1.3.norm2.weight, layers.1.1.3.norm2.bias, layers.1.1.3.ffn.layers.0.weight, layers.1.1.3.ffn.layers.0.bias, layers.1.1.3.ffn.layers.1.weight, layers.1.1.3.ffn.layers.1.bias, layers.1.1.3.ffn.layers.4.weight, layers.1.1.3.ffn.layers.4.bias, layers.1.1.4.norm1.weight, layers.1.1.4.norm1.bias, layers.1.1.4.attn.attn.in_proj_weight, layers.1.1.4.attn.attn.in_proj_bias, layers.1.1.4.attn.attn.out_proj.weight, layers.1.1.4.attn.attn.out_proj.bias, layers.1.1.4.attn.sr.weight, layers.1.1.4.attn.sr.bias, layers.1.1.4.attn.norm.weight, layers.1.1.4.attn.norm.bias, layers.1.1.4.norm2.weight, layers.1.1.4.norm2.bias, layers.1.1.4.ffn.layers.0.weight, layers.1.1.4.ffn.layers.0.bias, layers.1.1.4.ffn.layers.1.weight, layers.1.1.4.ffn.layers.1.bias, layers.1.1.4.ffn.layers.4.weight, layers.1.1.4.ffn.layers.4.bias, layers.1.1.5.norm1.weight, layers.1.1.5.norm1.bias, layers.1.1.5.attn.attn.in_proj_weight, layers.1.1.5.attn.attn.in_proj_bias, layers.1.1.5.attn.attn.out_proj.weight, layers.1.1.5.attn.attn.out_proj.bias, layers.1.1.5.attn.sr.weight, layers.1.1.5.attn.sr.bias, layers.1.1.5.attn.norm.weight, layers.1.1.5.attn.norm.bias, layers.1.1.5.norm2.weight, layers.1.1.5.norm2.bias, layers.1.1.5.ffn.layers.0.weight, layers.1.1.5.ffn.layers.0.bias, layers.1.1.5.ffn.layers.1.weight, layers.1.1.5.ffn.layers.1.bias, layers.1.1.5.ffn.layers.4.weight, layers.1.1.5.ffn.layers.4.bias, layers.1.2.weight, layers.1.2.bias, layers.2.0.projection.weight, layers.2.0.projection.bias, layers.2.0.norm.weight, layers.2.0.norm.bias, layers.2.1.0.norm1.weight, layers.2.1.0.norm1.bias, layers.2.1.0.attn.attn.in_proj_weight, layers.2.1.0.attn.attn.in_proj_bias, layers.2.1.0.attn.attn.out_proj.weight, layers.2.1.0.attn.attn.out_proj.bias, layers.2.1.0.attn.sr.weight, layers.2.1.0.attn.sr.bias, layers.2.1.0.attn.norm.weight, layers.2.1.0.attn.norm.bias, layers.2.1.0.norm2.weight, layers.2.1.0.norm2.bias, layers.2.1.0.ffn.layers.0.weight, layers.2.1.0.ffn.layers.0.bias, layers.2.1.0.ffn.layers.1.weight, layers.2.1.0.ffn.layers.1.bias, layers.2.1.0.ffn.layers.4.weight, layers.2.1.0.ffn.layers.4.bias, layers.2.1.1.norm1.weight, layers.2.1.1.norm1.bias, layers.2.1.1.attn.attn.in_proj_weight, layers.2.1.1.attn.attn.in_proj_bias, layers.2.1.1.attn.attn.out_proj.weight, layers.2.1.1.attn.attn.out_proj.bias, layers.2.1.1.attn.sr.weight, layers.2.1.1.attn.sr.bias, layers.2.1.1.attn.norm.weight, layers.2.1.1.attn.norm.bias, layers.2.1.1.norm2.weight, layers.2.1.1.norm2.bias, layers.2.1.1.ffn.layers.0.weight, layers.2.1.1.ffn.layers.0.bias, layers.2.1.1.ffn.layers.1.weight, layers.2.1.1.ffn.layers.1.bias, layers.2.1.1.ffn.layers.4.weight, layers.2.1.1.ffn.layers.4.bias, layers.2.1.2.norm1.weight, layers.2.1.2.norm1.bias, layers.2.1.2.attn.attn.in_proj_weight, layers.2.1.2.attn.attn.in_proj_bias, layers.2.1.2.attn.attn.out_proj.weight, layers.2.1.2.attn.attn.out_proj.bias, layers.2.1.2.attn.sr.weight, layers.2.1.2.attn.sr.bias, layers.2.1.2.attn.norm.weight, layers.2.1.2.attn.norm.bias, layers.2.1.2.norm2.weight, layers.2.1.2.norm2.bias, layers.2.1.2.ffn.layers.0.weight, layers.2.1.2.ffn.layers.0.bias, layers.2.1.2.ffn.layers.1.weight, layers.2.1.2.ffn.layers.1.bias, layers.2.1.2.ffn.layers.4.weight, layers.2.1.2.ffn.layers.4.bias, layers.2.1.3.norm1.weight, layers.2.1.3.norm1.bias, layers.2.1.3.attn.attn.in_proj_weight, layers.2.1.3.attn.attn.in_proj_bias, layers.2.1.3.attn.attn.out_proj.weight, layers.2.1.3.attn.attn.out_proj.bias, layers.2.1.3.attn.sr.weight, layers.2.1.3.attn.sr.bias, layers.2.1.3.attn.norm.weight, layers.2.1.3.attn.norm.bias, layers.2.1.3.norm2.weight, layers.2.1.3.norm2.bias, layers.2.1.3.ffn.layers.0.weight, layers.2.1.3.ffn.layers.0.bias, layers.2.1.3.ffn.layers.1.weight, layers.2.1.3.ffn.layers.1.bias, layers.2.1.3.ffn.layers.4.weight, layers.2.1.3.ffn.layers.4.bias, layers.2.1.4.norm1.weight, layers.2.1.4.norm1.bias, layers.2.1.4.attn.attn.in_proj_weight, layers.2.1.4.attn.attn.in_proj_bias, layers.2.1.4.attn.attn.out_proj.weight, layers.2.1.4.attn.attn.out_proj.bias, layers.2.1.4.attn.sr.weight, layers.2.1.4.attn.sr.bias, layers.2.1.4.attn.norm.weight, layers.2.1.4.attn.norm.bias, layers.2.1.4.norm2.weight, layers.2.1.4.norm2.bias, layers.2.1.4.ffn.layers.0.weight, layers.2.1.4.ffn.layers.0.bias, layers.2.1.4.ffn.layers.1.weight, layers.2.1.4.ffn.layers.1.bias, layers.2.1.4.ffn.layers.4.weight, layers.2.1.4.ffn.layers.4.bias, layers.2.1.5.norm1.weight, layers.2.1.5.norm1.bias, layers.2.1.5.attn.attn.in_proj_weight, layers.2.1.5.attn.attn.in_proj_bias, layers.2.1.5.attn.attn.out_proj.weight, layers.2.1.5.attn.attn.out_proj.bias, layers.2.1.5.attn.sr.weight, layers.2.1.5.attn.sr.bias, layers.2.1.5.attn.norm.weight, layers.2.1.5.attn.norm.bias, layers.2.1.5.norm2.weight, layers.2.1.5.norm2.bias, layers.2.1.5.ffn.layers.0.weight, layers.2.1.5.ffn.layers.0.bias, layers.2.1.5.ffn.layers.1.weight, layers.2.1.5.ffn.layers.1.bias, layers.2.1.5.ffn.layers.4.weight, layers.2.1.5.ffn.layers.4.bias, layers.2.1.6.norm1.weight, layers.2.1.6.norm1.bias, layers.2.1.6.attn.attn.in_proj_weight, layers.2.1.6.attn.attn.in_proj_bias, layers.2.1.6.attn.attn.out_proj.weight, layers.2.1.6.attn.attn.out_proj.bias, layers.2.1.6.attn.sr.weight, layers.2.1.6.attn.sr.bias, layers.2.1.6.attn.norm.weight, layers.2.1.6.attn.norm.bias, layers.2.1.6.norm2.weight, layers.2.1.6.norm2.bias, layers.2.1.6.ffn.layers.0.weight, layers.2.1.6.ffn.layers.0.bias, layers.2.1.6.ffn.layers.1.weight, layers.2.1.6.ffn.layers.1.bias, layers.2.1.6.ffn.layers.4.weight, layers.2.1.6.ffn.layers.4.bias, layers.2.1.7.norm1.weight, layers.2.1.7.norm1.bias, layers.2.1.7.attn.attn.in_proj_weight, layers.2.1.7.attn.attn.in_proj_bias, layers.2.1.7.attn.attn.out_proj.weight, layers.2.1.7.attn.attn.out_proj.bias, layers.2.1.7.attn.sr.weight, layers.2.1.7.attn.sr.bias, layers.2.1.7.attn.norm.weight, layers.2.1.7.attn.norm.bias, layers.2.1.7.norm2.weight, layers.2.1.7.norm2.bias, layers.2.1.7.ffn.layers.0.weight, layers.2.1.7.ffn.layers.0.bias, layers.2.1.7.ffn.layers.1.weight, layers.2.1.7.ffn.layers.1.bias, layers.2.1.7.ffn.layers.4.weight, layers.2.1.7.ffn.layers.4.bias, layers.2.1.8.norm1.weight, layers.2.1.8.norm1.bias, layers.2.1.8.attn.attn.in_proj_weight, layers.2.1.8.attn.attn.in_proj_bias, layers.2.1.8.attn.attn.out_proj.weight, layers.2.1.8.attn.attn.out_proj.bias, layers.2.1.8.attn.sr.weight, layers.2.1.8.attn.sr.bias, layers.2.1.8.attn.norm.weight, layers.2.1.8.attn.norm.bias, layers.2.1.8.norm2.weight, layers.2.1.8.norm2.bias, layers.2.1.8.ffn.layers.0.weight, layers.2.1.8.ffn.layers.0.bias, layers.2.1.8.ffn.layers.1.weight, layers.2.1.8.ffn.layers.1.bias, layers.2.1.8.ffn.layers.4.weight, layers.2.1.8.ffn.layers.4.bias, layers.2.1.9.norm1.weight, layers.2.1.9.norm1.bias, layers.2.1.9.attn.attn.in_proj_weight, layers.2.1.9.attn.attn.in_proj_bias, layers.2.1.9.attn.attn.out_proj.weight, layers.2.1.9.attn.attn.out_proj.bias, layers.2.1.9.attn.sr.weight, layers.2.1.9.attn.sr.bias, layers.2.1.9.attn.norm.weight, layers.2.1.9.attn.norm.bias, layers.2.1.9.norm2.weight, layers.2.1.9.norm2.bias, layers.2.1.9.ffn.layers.0.weight, layers.2.1.9.ffn.layers.0.bias, layers.2.1.9.ffn.layers.1.weight, layers.2.1.9.ffn.layers.1.bias, layers.2.1.9.ffn.layers.4.weight, layers.2.1.9.ffn.layers.4.bias, layers.2.1.10.norm1.weight, layers.2.1.10.norm1.bias, layers.2.1.10.attn.attn.in_proj_weight, layers.2.1.10.attn.attn.in_proj_bias, layers.2.1.10.attn.attn.out_proj.weight, layers.2.1.10.attn.attn.out_proj.bias, layers.2.1.10.attn.sr.weight, layers.2.1.10.attn.sr.bias, layers.2.1.10.attn.norm.weight, layers.2.1.10.attn.norm.bias, layers.2.1.10.norm2.weight, layers.2.1.10.norm2.bias, layers.2.1.10.ffn.layers.0.weight, layers.2.1.10.ffn.layers.0.bias, layers.2.1.10.ffn.layers.1.weight, layers.2.1.10.ffn.layers.1.bias, layers.2.1.10.ffn.layers.4.weight, layers.2.1.10.ffn.layers.4.bias, layers.2.1.11.norm1.weight, layers.2.1.11.norm1.bias, layers.2.1.11.attn.attn.in_proj_weight, layers.2.1.11.attn.attn.in_proj_bias, layers.2.1.11.attn.attn.out_proj.weight, layers.2.1.11.attn.attn.out_proj.bias, layers.2.1.11.attn.sr.weight, layers.2.1.11.attn.sr.bias, layers.2.1.11.attn.norm.weight, layers.2.1.11.attn.norm.bias, layers.2.1.11.norm2.weight, layers.2.1.11.norm2.bias, layers.2.1.11.ffn.layers.0.weight, layers.2.1.11.ffn.layers.0.bias, layers.2.1.11.ffn.layers.1.weight, layers.2.1.11.ffn.layers.1.bias, layers.2.1.11.ffn.layers.4.weight, layers.2.1.11.ffn.layers.4.bias, layers.2.1.12.norm1.weight, layers.2.1.12.norm1.bias, layers.2.1.12.attn.attn.in_proj_weight, layers.2.1.12.attn.attn.in_proj_bias, layers.2.1.12.attn.attn.out_proj.weight, layers.2.1.12.attn.attn.out_proj.bias, layers.2.1.12.attn.sr.weight, layers.2.1.12.attn.sr.bias, layers.2.1.12.attn.norm.weight, layers.2.1.12.attn.norm.bias, layers.2.1.12.norm2.weight, layers.2.1.12.norm2.bias, layers.2.1.12.ffn.layers.0.weight, layers.2.1.12.ffn.layers.0.bias, layers.2.1.12.ffn.layers.1.weight, layers.2.1.12.ffn.layers.1.bias, layers.2.1.12.ffn.layers.4.weight, layers.2.1.12.ffn.layers.4.bias, layers.2.1.13.norm1.weight, layers.2.1.13.norm1.bias, layers.2.1.13.attn.attn.in_proj_weight, layers.2.1.13.attn.attn.in_proj_bias, layers.2.1.13.attn.attn.out_proj.weight, layers.2.1.13.attn.attn.out_proj.bias, layers.2.1.13.attn.sr.weight, layers.2.1.13.attn.sr.bias, layers.2.1.13.attn.norm.weight, layers.2.1.13.attn.norm.bias, layers.2.1.13.norm2.weight, layers.2.1.13.norm2.bias, layers.2.1.13.ffn.layers.0.weight, layers.2.1.13.ffn.layers.0.bias, layers.2.1.13.ffn.layers.1.weight, layers.2.1.13.ffn.layers.1.bias, layers.2.1.13.ffn.layers.4.weight, layers.2.1.13.ffn.layers.4.bias, layers.2.1.14.norm1.weight, layers.2.1.14.norm1.bias, layers.2.1.14.attn.attn.in_proj_weight, layers.2.1.14.attn.attn.in_proj_bias, layers.2.1.14.attn.attn.out_proj.weight, layers.2.1.14.attn.attn.out_proj.bias, layers.2.1.14.attn.sr.weight, layers.2.1.14.attn.sr.bias, layers.2.1.14.attn.norm.weight, layers.2.1.14.attn.norm.bias, layers.2.1.14.norm2.weight, layers.2.1.14.norm2.bias, layers.2.1.14.ffn.layers.0.weight, layers.2.1.14.ffn.layers.0.bias, layers.2.1.14.ffn.layers.1.weight, layers.2.1.14.ffn.layers.1.bias, layers.2.1.14.ffn.layers.4.weight, layers.2.1.14.ffn.layers.4.bias, layers.2.1.15.norm1.weight, layers.2.1.15.norm1.bias, layers.2.1.15.attn.attn.in_proj_weight, layers.2.1.15.attn.attn.in_proj_bias, layers.2.1.15.attn.attn.out_proj.weight, layers.2.1.15.attn.attn.out_proj.bias, layers.2.1.15.attn.sr.weight, layers.2.1.15.attn.sr.bias, layers.2.1.15.attn.norm.weight, layers.2.1.15.attn.norm.bias, layers.2.1.15.norm2.weight, layers.2.1.15.norm2.bias, layers.2.1.15.ffn.layers.0.weight, layers.2.1.15.ffn.layers.0.bias, layers.2.1.15.ffn.layers.1.weight, layers.2.1.15.ffn.layers.1.bias, layers.2.1.15.ffn.layers.4.weight, layers.2.1.15.ffn.layers.4.bias, layers.2.1.16.norm1.weight, layers.2.1.16.norm1.bias, layers.2.1.16.attn.attn.in_proj_weight, layers.2.1.16.attn.attn.in_proj_bias, layers.2.1.16.attn.attn.out_proj.weight, layers.2.1.16.attn.attn.out_proj.bias, layers.2.1.16.attn.sr.weight, layers.2.1.16.attn.sr.bias, layers.2.1.16.attn.norm.weight, layers.2.1.16.attn.norm.bias, layers.2.1.16.norm2.weight, layers.2.1.16.norm2.bias, layers.2.1.16.ffn.layers.0.weight, layers.2.1.16.ffn.layers.0.bias, layers.2.1.16.ffn.layers.1.weight, layers.2.1.16.ffn.layers.1.bias, layers.2.1.16.ffn.layers.4.weight, layers.2.1.16.ffn.layers.4.bias, layers.2.1.17.norm1.weight, layers.2.1.17.norm1.bias, layers.2.1.17.attn.attn.in_proj_weight, layers.2.1.17.attn.attn.in_proj_bias, layers.2.1.17.attn.attn.out_proj.weight, layers.2.1.17.attn.attn.out_proj.bias, layers.2.1.17.attn.sr.weight, layers.2.1.17.attn.sr.bias, layers.2.1.17.attn.norm.weight, layers.2.1.17.attn.norm.bias, layers.2.1.17.norm2.weight, layers.2.1.17.norm2.bias, layers.2.1.17.ffn.layers.0.weight, layers.2.1.17.ffn.layers.0.bias, layers.2.1.17.ffn.layers.1.weight, layers.2.1.17.ffn.layers.1.bias, layers.2.1.17.ffn.layers.4.weight, layers.2.1.17.ffn.layers.4.bias, layers.2.1.18.norm1.weight, layers.2.1.18.norm1.bias, layers.2.1.18.attn.attn.in_proj_weight, layers.2.1.18.attn.attn.in_proj_bias, layers.2.1.18.attn.attn.out_proj.weight, layers.2.1.18.attn.attn.out_proj.bias, layers.2.1.18.attn.sr.weight, layers.2.1.18.attn.sr.bias, layers.2.1.18.attn.norm.weight, layers.2.1.18.attn.norm.bias, layers.2.1.18.norm2.weight, layers.2.1.18.norm2.bias, layers.2.1.18.ffn.layers.0.weight, layers.2.1.18.ffn.layers.0.bias, layers.2.1.18.ffn.layers.1.weight, layers.2.1.18.ffn.layers.1.bias, layers.2.1.18.ffn.layers.4.weight, layers.2.1.18.ffn.layers.4.bias, layers.2.1.19.norm1.weight, layers.2.1.19.norm1.bias, layers.2.1.19.attn.attn.in_proj_weight, layers.2.1.19.attn.attn.in_proj_bias, layers.2.1.19.attn.attn.out_proj.weight, layers.2.1.19.attn.attn.out_proj.bias, layers.2.1.19.attn.sr.weight, layers.2.1.19.attn.sr.bias, layers.2.1.19.attn.norm.weight, layers.2.1.19.attn.norm.bias, layers.2.1.19.norm2.weight, layers.2.1.19.norm2.bias, layers.2.1.19.ffn.layers.0.weight, layers.2.1.19.ffn.layers.0.bias, layers.2.1.19.ffn.layers.1.weight, layers.2.1.19.ffn.layers.1.bias, layers.2.1.19.ffn.layers.4.weight, layers.2.1.19.ffn.layers.4.bias, layers.2.1.20.norm1.weight, layers.2.1.20.norm1.bias, layers.2.1.20.attn.attn.in_proj_weight, layers.2.1.20.attn.attn.in_proj_bias, layers.2.1.20.attn.attn.out_proj.weight, layers.2.1.20.attn.attn.out_proj.bias, layers.2.1.20.attn.sr.weight, layers.2.1.20.attn.sr.bias, layers.2.1.20.attn.norm.weight, layers.2.1.20.attn.norm.bias, layers.2.1.20.norm2.weight, layers.2.1.20.norm2.bias, layers.2.1.20.ffn.layers.0.weight, layers.2.1.20.ffn.layers.0.bias, layers.2.1.20.ffn.layers.1.weight, layers.2.1.20.ffn.layers.1.bias, layers.2.1.20.ffn.layers.4.weight, layers.2.1.20.ffn.layers.4.bias, layers.2.1.21.norm1.weight, layers.2.1.21.norm1.bias, layers.2.1.21.attn.attn.in_proj_weight, layers.2.1.21.attn.attn.in_proj_bias, layers.2.1.21.attn.attn.out_proj.weight, layers.2.1.21.attn.attn.out_proj.bias, layers.2.1.21.attn.sr.weight, layers.2.1.21.attn.sr.bias, layers.2.1.21.attn.norm.weight, layers.2.1.21.attn.norm.bias, layers.2.1.21.norm2.weight, layers.2.1.21.norm2.bias, layers.2.1.21.ffn.layers.0.weight, layers.2.1.21.ffn.layers.0.bias, layers.2.1.21.ffn.layers.1.weight, layers.2.1.21.ffn.layers.1.bias, layers.2.1.21.ffn.layers.4.weight, layers.2.1.21.ffn.layers.4.bias, layers.2.1.22.norm1.weight, layers.2.1.22.norm1.bias, layers.2.1.22.attn.attn.in_proj_weight, layers.2.1.22.attn.attn.in_proj_bias, layers.2.1.22.attn.attn.out_proj.weight, layers.2.1.22.attn.attn.out_proj.bias, layers.2.1.22.attn.sr.weight, layers.2.1.22.attn.sr.bias, layers.2.1.22.attn.norm.weight, layers.2.1.22.attn.norm.bias, layers.2.1.22.norm2.weight, layers.2.1.22.norm2.bias, layers.2.1.22.ffn.layers.0.weight, layers.2.1.22.ffn.layers.0.bias, layers.2.1.22.ffn.layers.1.weight, layers.2.1.22.ffn.layers.1.bias, layers.2.1.22.ffn.layers.4.weight, layers.2.1.22.ffn.layers.4.bias, layers.2.1.23.norm1.weight, layers.2.1.23.norm1.bias, layers.2.1.23.attn.attn.in_proj_weight, layers.2.1.23.attn.attn.in_proj_bias, layers.2.1.23.attn.attn.out_proj.weight, layers.2.1.23.attn.attn.out_proj.bias, layers.2.1.23.attn.sr.weight, layers.2.1.23.attn.sr.bias, layers.2.1.23.attn.norm.weight, layers.2.1.23.attn.norm.bias, layers.2.1.23.norm2.weight, layers.2.1.23.norm2.bias, layers.2.1.23.ffn.layers.0.weight, layers.2.1.23.ffn.layers.0.bias, layers.2.1.23.ffn.layers.1.weight, layers.2.1.23.ffn.layers.1.bias, layers.2.1.23.ffn.layers.4.weight, layers.2.1.23.ffn.layers.4.bias, layers.2.1.24.norm1.weight, layers.2.1.24.norm1.bias, layers.2.1.24.attn.attn.in_proj_weight, layers.2.1.24.attn.attn.in_proj_bias, layers.2.1.24.attn.attn.out_proj.weight, layers.2.1.24.attn.attn.out_proj.bias, layers.2.1.24.attn.sr.weight, layers.2.1.24.attn.sr.bias, layers.2.1.24.attn.norm.weight, layers.2.1.24.attn.norm.bias, layers.2.1.24.norm2.weight, layers.2.1.24.norm2.bias, layers.2.1.24.ffn.layers.0.weight, layers.2.1.24.ffn.layers.0.bias, layers.2.1.24.ffn.layers.1.weight, layers.2.1.24.ffn.layers.1.bias, layers.2.1.24.ffn.layers.4.weight, layers.2.1.24.ffn.layers.4.bias, layers.2.1.25.norm1.weight, layers.2.1.25.norm1.bias, layers.2.1.25.attn.attn.in_proj_weight, layers.2.1.25.attn.attn.in_proj_bias, layers.2.1.25.attn.attn.out_proj.weight, layers.2.1.25.attn.attn.out_proj.bias, layers.2.1.25.attn.sr.weight, layers.2.1.25.attn.sr.bias, layers.2.1.25.attn.norm.weight, layers.2.1.25.attn.norm.bias, layers.2.1.25.norm2.weight, layers.2.1.25.norm2.bias, layers.2.1.25.ffn.layers.0.weight, layers.2.1.25.ffn.layers.0.bias, layers.2.1.25.ffn.layers.1.weight, layers.2.1.25.ffn.layers.1.bias, layers.2.1.25.ffn.layers.4.weight, layers.2.1.25.ffn.layers.4.bias, layers.2.1.26.norm1.weight, layers.2.1.26.norm1.bias, layers.2.1.26.attn.attn.in_proj_weight, layers.2.1.26.attn.attn.in_proj_bias, layers.2.1.26.attn.attn.out_proj.weight, layers.2.1.26.attn.attn.out_proj.bias, layers.2.1.26.attn.sr.weight, layers.2.1.26.attn.sr.bias, layers.2.1.26.attn.norm.weight, layers.2.1.26.attn.norm.bias, layers.2.1.26.norm2.weight, layers.2.1.26.norm2.bias, layers.2.1.26.ffn.layers.0.weight, layers.2.1.26.ffn.layers.0.bias, layers.2.1.26.ffn.layers.1.weight, layers.2.1.26.ffn.layers.1.bias, layers.2.1.26.ffn.layers.4.weight, layers.2.1.26.ffn.layers.4.bias, layers.2.1.27.norm1.weight, layers.2.1.27.norm1.bias, layers.2.1.27.attn.attn.in_proj_weight, layers.2.1.27.attn.attn.in_proj_bias, layers.2.1.27.attn.attn.out_proj.weight, layers.2.1.27.attn.attn.out_proj.bias, layers.2.1.27.attn.sr.weight, layers.2.1.27.attn.sr.bias, layers.2.1.27.attn.norm.weight, layers.2.1.27.attn.norm.bias, layers.2.1.27.norm2.weight, layers.2.1.27.norm2.bias, layers.2.1.27.ffn.layers.0.weight, layers.2.1.27.ffn.layers.0.bias, layers.2.1.27.ffn.layers.1.weight, layers.2.1.27.ffn.layers.1.bias, layers.2.1.27.ffn.layers.4.weight, layers.2.1.27.ffn.layers.4.bias, layers.2.1.28.norm1.weight, layers.2.1.28.norm1.bias, layers.2.1.28.attn.attn.in_proj_weight, layers.2.1.28.attn.attn.in_proj_bias, layers.2.1.28.attn.attn.out_proj.weight, layers.2.1.28.attn.attn.out_proj.bias, layers.2.1.28.attn.sr.weight, layers.2.1.28.attn.sr.bias, layers.2.1.28.attn.norm.weight, layers.2.1.28.attn.norm.bias, layers.2.1.28.norm2.weight, layers.2.1.28.norm2.bias, layers.2.1.28.ffn.layers.0.weight, layers.2.1.28.ffn.layers.0.bias, layers.2.1.28.ffn.layers.1.weight, layers.2.1.28.ffn.layers.1.bias, layers.2.1.28.ffn.layers.4.weight, layers.2.1.28.ffn.layers.4.bias, layers.2.1.29.norm1.weight, layers.2.1.29.norm1.bias, layers.2.1.29.attn.attn.in_proj_weight, layers.2.1.29.attn.attn.in_proj_bias, layers.2.1.29.attn.attn.out_proj.weight, layers.2.1.29.attn.attn.out_proj.bias, layers.2.1.29.attn.sr.weight, layers.2.1.29.attn.sr.bias, layers.2.1.29.attn.norm.weight, layers.2.1.29.attn.norm.bias, layers.2.1.29.norm2.weight, layers.2.1.29.norm2.bias, layers.2.1.29.ffn.layers.0.weight, layers.2.1.29.ffn.layers.0.bias, layers.2.1.29.ffn.layers.1.weight, layers.2.1.29.ffn.layers.1.bias, layers.2.1.29.ffn.layers.4.weight, layers.2.1.29.ffn.layers.4.bias, layers.2.1.30.norm1.weight, layers.2.1.30.norm1.bias, layers.2.1.30.attn.attn.in_proj_weight, layers.2.1.30.attn.attn.in_proj_bias, layers.2.1.30.attn.attn.out_proj.weight, layers.2.1.30.attn.attn.out_proj.bias, layers.2.1.30.attn.sr.weight, layers.2.1.30.attn.sr.bias, layers.2.1.30.attn.norm.weight, layers.2.1.30.attn.norm.bias, layers.2.1.30.norm2.weight, layers.2.1.30.norm2.bias, layers.2.1.30.ffn.layers.0.weight, layers.2.1.30.ffn.layers.0.bias, layers.2.1.30.ffn.layers.1.weight, layers.2.1.30.ffn.layers.1.bias, layers.2.1.30.ffn.layers.4.weight, layers.2.1.30.ffn.layers.4.bias, layers.2.1.31.norm1.weight, layers.2.1.31.norm1.bias, layers.2.1.31.attn.attn.in_proj_weight, layers.2.1.31.attn.attn.in_proj_bias, layers.2.1.31.attn.attn.out_proj.weight, layers.2.1.31.attn.attn.out_proj.bias, layers.2.1.31.attn.sr.weight, layers.2.1.31.attn.sr.bias, layers.2.1.31.attn.norm.weight, layers.2.1.31.attn.norm.bias, layers.2.1.31.norm2.weight, layers.2.1.31.norm2.bias, layers.2.1.31.ffn.layers.0.weight, layers.2.1.31.ffn.layers.0.bias, layers.2.1.31.ffn.layers.1.weight, layers.2.1.31.ffn.layers.1.bias, layers.2.1.31.ffn.layers.4.weight, layers.2.1.31.ffn.layers.4.bias, layers.2.1.32.norm1.weight, layers.2.1.32.norm1.bias, layers.2.1.32.attn.attn.in_proj_weight, layers.2.1.32.attn.attn.in_proj_bias, layers.2.1.32.attn.attn.out_proj.weight, layers.2.1.32.attn.attn.out_proj.bias, layers.2.1.32.attn.sr.weight, layers.2.1.32.attn.sr.bias, layers.2.1.32.attn.norm.weight, layers.2.1.32.attn.norm.bias, layers.2.1.32.norm2.weight, layers.2.1.32.norm2.bias, layers.2.1.32.ffn.layers.0.weight, layers.2.1.32.ffn.layers.0.bias, layers.2.1.32.ffn.layers.1.weight, layers.2.1.32.ffn.layers.1.bias, layers.2.1.32.ffn.layers.4.weight, layers.2.1.32.ffn.layers.4.bias, layers.2.1.33.norm1.weight, layers.2.1.33.norm1.bias, layers.2.1.33.attn.attn.in_proj_weight, layers.2.1.33.attn.attn.in_proj_bias, layers.2.1.33.attn.attn.out_proj.weight, layers.2.1.33.attn.attn.out_proj.bias, layers.2.1.33.attn.sr.weight, layers.2.1.33.attn.sr.bias, layers.2.1.33.attn.norm.weight, layers.2.1.33.attn.norm.bias, layers.2.1.33.norm2.weight, layers.2.1.33.norm2.bias, layers.2.1.33.ffn.layers.0.weight, layers.2.1.33.ffn.layers.0.bias, layers.2.1.33.ffn.layers.1.weight, layers.2.1.33.ffn.layers.1.bias, layers.2.1.33.ffn.layers.4.weight, layers.2.1.33.ffn.layers.4.bias, layers.2.1.34.norm1.weight, layers.2.1.34.norm1.bias, layers.2.1.34.attn.attn.in_proj_weight, layers.2.1.34.attn.attn.in_proj_bias, layers.2.1.34.attn.attn.out_proj.weight, layers.2.1.34.attn.attn.out_proj.bias, layers.2.1.34.attn.sr.weight, layers.2.1.34.attn.sr.bias, layers.2.1.34.attn.norm.weight, layers.2.1.34.attn.norm.bias, layers.2.1.34.norm2.weight, layers.2.1.34.norm2.bias, layers.2.1.34.ffn.layers.0.weight, layers.2.1.34.ffn.layers.0.bias, layers.2.1.34.ffn.layers.1.weight, layers.2.1.34.ffn.layers.1.bias, layers.2.1.34.ffn.layers.4.weight, layers.2.1.34.ffn.layers.4.bias, layers.2.1.35.norm1.weight, layers.2.1.35.norm1.bias, layers.2.1.35.attn.attn.in_proj_weight, layers.2.1.35.attn.attn.in_proj_bias, layers.2.1.35.attn.attn.out_proj.weight, layers.2.1.35.attn.attn.out_proj.bias, layers.2.1.35.attn.sr.weight, layers.2.1.35.attn.sr.bias, layers.2.1.35.attn.norm.weight, layers.2.1.35.attn.norm.bias, layers.2.1.35.norm2.weight, layers.2.1.35.norm2.bias, layers.2.1.35.ffn.layers.0.weight, layers.2.1.35.ffn.layers.0.bias, layers.2.1.35.ffn.layers.1.weight, layers.2.1.35.ffn.layers.1.bias, layers.2.1.35.ffn.layers.4.weight, layers.2.1.35.ffn.layers.4.bias, layers.2.1.36.norm1.weight, layers.2.1.36.norm1.bias, layers.2.1.36.attn.attn.in_proj_weight, layers.2.1.36.attn.attn.in_proj_bias, layers.2.1.36.attn.attn.out_proj.weight, layers.2.1.36.attn.attn.out_proj.bias, layers.2.1.36.attn.sr.weight, layers.2.1.36.attn.sr.bias, layers.2.1.36.attn.norm.weight, layers.2.1.36.attn.norm.bias, layers.2.1.36.norm2.weight, layers.2.1.36.norm2.bias, layers.2.1.36.ffn.layers.0.weight, layers.2.1.36.ffn.layers.0.bias, layers.2.1.36.ffn.layers.1.weight, layers.2.1.36.ffn.layers.1.bias, layers.2.1.36.ffn.layers.4.weight, layers.2.1.36.ffn.layers.4.bias, layers.2.1.37.norm1.weight, layers.2.1.37.norm1.bias, layers.2.1.37.attn.attn.in_proj_weight, layers.2.1.37.attn.attn.in_proj_bias, layers.2.1.37.attn.attn.out_proj.weight, layers.2.1.37.attn.attn.out_proj.bias, layers.2.1.37.attn.sr.weight, layers.2.1.37.attn.sr.bias, layers.2.1.37.attn.norm.weight, layers.2.1.37.attn.norm.bias, layers.2.1.37.norm2.weight, layers.2.1.37.norm2.bias, layers.2.1.37.ffn.layers.0.weight, layers.2.1.37.ffn.layers.0.bias, layers.2.1.37.ffn.layers.1.weight, layers.2.1.37.ffn.layers.1.bias, layers.2.1.37.ffn.layers.4.weight, layers.2.1.37.ffn.layers.4.bias, layers.2.1.38.norm1.weight, layers.2.1.38.norm1.bias, layers.2.1.38.attn.attn.in_proj_weight, layers.2.1.38.attn.attn.in_proj_bias, layers.2.1.38.attn.attn.out_proj.weight, layers.2.1.38.attn.attn.out_proj.bias, layers.2.1.38.attn.sr.weight, layers.2.1.38.attn.sr.bias, layers.2.1.38.attn.norm.weight, layers.2.1.38.attn.norm.bias, layers.2.1.38.norm2.weight, layers.2.1.38.norm2.bias, layers.2.1.38.ffn.layers.0.weight, layers.2.1.38.ffn.layers.0.bias, layers.2.1.38.ffn.layers.1.weight, layers.2.1.38.ffn.layers.1.bias, layers.2.1.38.ffn.layers.4.weight, layers.2.1.38.ffn.layers.4.bias, layers.2.1.39.norm1.weight, layers.2.1.39.norm1.bias, layers.2.1.39.attn.attn.in_proj_weight, layers.2.1.39.attn.attn.in_proj_bias, layers.2.1.39.attn.attn.out_proj.weight, layers.2.1.39.attn.attn.out_proj.bias, layers.2.1.39.attn.sr.weight, layers.2.1.39.attn.sr.bias, layers.2.1.39.attn.norm.weight, layers.2.1.39.attn.norm.bias, layers.2.1.39.norm2.weight, layers.2.1.39.norm2.bias, layers.2.1.39.ffn.layers.0.weight, layers.2.1.39.ffn.layers.0.bias, layers.2.1.39.ffn.layers.1.weight, layers.2.1.39.ffn.layers.1.bias, layers.2.1.39.ffn.layers.4.weight, layers.2.1.39.ffn.layers.4.bias, layers.2.2.weight, layers.2.2.bias, layers.3.0.projection.weight, layers.3.0.projection.bias, layers.3.0.norm.weight, layers.3.0.norm.bias, layers.3.1.0.norm1.weight, layers.3.1.0.norm1.bias, layers.3.1.0.attn.attn.in_proj_weight, layers.3.1.0.attn.attn.in_proj_bias, layers.3.1.0.attn.attn.out_proj.weight, layers.3.1.0.attn.attn.out_proj.bias, layers.3.1.0.norm2.weight, layers.3.1.0.norm2.bias, layers.3.1.0.ffn.layers.0.weight, layers.3.1.0.ffn.layers.0.bias, layers.3.1.0.ffn.layers.1.weight, layers.3.1.0.ffn.layers.1.bias, layers.3.1.0.ffn.layers.4.weight, layers.3.1.0.ffn.layers.4.bias, layers.3.1.1.norm1.weight, layers.3.1.1.norm1.bias, layers.3.1.1.attn.attn.in_proj_weight, layers.3.1.1.attn.attn.in_proj_bias, layers.3.1.1.attn.attn.out_proj.weight, layers.3.1.1.attn.attn.out_proj.bias, layers.3.1.1.norm2.weight, layers.3.1.1.norm2.bias, layers.3.1.1.ffn.layers.0.weight, layers.3.1.1.ffn.layers.0.bias, layers.3.1.1.ffn.layers.1.weight, layers.3.1.1.ffn.layers.1.bias, layers.3.1.1.ffn.layers.4.weight, layers.3.1.1.ffn.layers.4.bias, layers.3.1.2.norm1.weight, layers.3.1.2.norm1.bias, layers.3.1.2.attn.attn.in_proj_weight, layers.3.1.2.attn.attn.in_proj_bias, layers.3.1.2.attn.attn.out_proj.weight, layers.3.1.2.attn.attn.out_proj.bias, layers.3.1.2.norm2.weight, layers.3.1.2.norm2.bias, layers.3.1.2.ffn.layers.0.weight, layers.3.1.2.ffn.layers.0.bias, layers.3.1.2.ffn.layers.1.weight, layers.3.1.2.ffn.layers.1.bias, layers.3.1.2.ffn.layers.4.weight, layers.3.1.2.ffn.layers.4.bias, layers.3.2.weight, layers.3.2.bias

Name of parameter - Initialization information

backbone.layers.0.0.projection.weight - torch.Size([64, 3, 7, 7]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.0.projection.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.0.norm.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.0.norm.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.0.norm1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.0.norm1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.0.attn.attn.in_proj_weight - torch.Size([192, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.0.attn.attn.in_proj_bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.0.attn.attn.out_proj.weight - torch.Size([64, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.0.attn.attn.out_proj.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.0.attn.sr.weight - torch.Size([64, 64, 8, 8]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.0.attn.sr.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.0.attn.norm.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.0.attn.norm.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.0.norm2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.0.norm2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.0.ffn.layers.0.weight - torch.Size([256, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.0.ffn.layers.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.0.ffn.layers.1.weight - torch.Size([256, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.0.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.0.ffn.layers.4.weight - torch.Size([64, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.0.ffn.layers.4.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.1.norm1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.1.norm1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.1.attn.attn.in_proj_weight - torch.Size([192, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.1.attn.attn.in_proj_bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.1.attn.attn.out_proj.weight - torch.Size([64, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.1.attn.attn.out_proj.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.1.attn.sr.weight - torch.Size([64, 64, 8, 8]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.1.attn.sr.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.1.attn.norm.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.1.attn.norm.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.1.norm2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.1.norm2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.1.ffn.layers.0.weight - torch.Size([256, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.1.ffn.layers.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.1.ffn.layers.1.weight - torch.Size([256, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.1.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.1.ffn.layers.4.weight - torch.Size([64, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.1.ffn.layers.4.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.2.norm1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.2.norm1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.2.attn.attn.in_proj_weight - torch.Size([192, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.2.attn.attn.in_proj_bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.2.attn.attn.out_proj.weight - torch.Size([64, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.2.attn.attn.out_proj.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.2.attn.sr.weight - torch.Size([64, 64, 8, 8]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.2.attn.sr.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.2.attn.norm.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.2.attn.norm.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.2.norm2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.2.norm2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.2.ffn.layers.0.weight - torch.Size([256, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.2.ffn.layers.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.2.ffn.layers.1.weight - torch.Size([256, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.2.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.2.ffn.layers.4.weight - torch.Size([64, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.1.2.ffn.layers.4.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.0.2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.0.projection.weight - torch.Size([128, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.0.projection.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.0.norm.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.0.norm.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.0.norm1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.0.norm1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.0.attn.attn.in_proj_weight - torch.Size([384, 128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.0.attn.attn.in_proj_bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.0.attn.attn.out_proj.weight - torch.Size([128, 128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.0.attn.attn.out_proj.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.0.attn.sr.weight - torch.Size([128, 128, 4, 4]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.0.attn.sr.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.0.attn.norm.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.0.attn.norm.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.0.norm2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.0.norm2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.0.ffn.layers.0.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.0.ffn.layers.0.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.0.ffn.layers.1.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.0.ffn.layers.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.0.ffn.layers.4.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.0.ffn.layers.4.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.1.norm1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.1.norm1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.1.attn.attn.in_proj_weight - torch.Size([384, 128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.1.attn.attn.in_proj_bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.1.attn.attn.out_proj.weight - torch.Size([128, 128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.1.attn.attn.out_proj.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.1.attn.sr.weight - torch.Size([128, 128, 4, 4]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.1.attn.sr.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.1.attn.norm.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.1.attn.norm.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.1.norm2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.1.norm2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.1.ffn.layers.0.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.1.ffn.layers.0.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.1.ffn.layers.1.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.1.ffn.layers.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.1.ffn.layers.4.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.1.ffn.layers.4.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.2.norm1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.2.norm1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.2.attn.attn.in_proj_weight - torch.Size([384, 128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.2.attn.attn.in_proj_bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.2.attn.attn.out_proj.weight - torch.Size([128, 128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.2.attn.attn.out_proj.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.2.attn.sr.weight - torch.Size([128, 128, 4, 4]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.2.attn.sr.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.2.attn.norm.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.2.attn.norm.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.2.norm2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.2.norm2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.2.ffn.layers.0.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.2.ffn.layers.0.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.2.ffn.layers.1.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.2.ffn.layers.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.2.ffn.layers.4.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.2.ffn.layers.4.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.3.norm1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.3.norm1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.3.attn.attn.in_proj_weight - torch.Size([384, 128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.3.attn.attn.in_proj_bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.3.attn.attn.out_proj.weight - torch.Size([128, 128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.3.attn.attn.out_proj.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.3.attn.sr.weight - torch.Size([128, 128, 4, 4]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.3.attn.sr.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.3.attn.norm.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.3.attn.norm.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.3.norm2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.3.norm2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.3.ffn.layers.0.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.3.ffn.layers.0.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.3.ffn.layers.1.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.3.ffn.layers.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.3.ffn.layers.4.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.3.ffn.layers.4.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.4.norm1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.4.norm1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.4.attn.attn.in_proj_weight - torch.Size([384, 128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.4.attn.attn.in_proj_bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.4.attn.attn.out_proj.weight - torch.Size([128, 128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.4.attn.attn.out_proj.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.4.attn.sr.weight - torch.Size([128, 128, 4, 4]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.4.attn.sr.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.4.attn.norm.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.4.attn.norm.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.4.norm2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.4.norm2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.4.ffn.layers.0.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.4.ffn.layers.0.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.4.ffn.layers.1.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.4.ffn.layers.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.4.ffn.layers.4.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.4.ffn.layers.4.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.5.norm1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.5.norm1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.5.attn.attn.in_proj_weight - torch.Size([384, 128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.5.attn.attn.in_proj_bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.5.attn.attn.out_proj.weight - torch.Size([128, 128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.5.attn.attn.out_proj.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.5.attn.sr.weight - torch.Size([128, 128, 4, 4]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.5.attn.sr.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.5.attn.norm.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.5.attn.norm.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.5.norm2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.5.norm2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.5.ffn.layers.0.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.5.ffn.layers.0.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.5.ffn.layers.1.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.5.ffn.layers.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.5.ffn.layers.4.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.1.5.ffn.layers.4.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.1.2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.0.projection.weight - torch.Size([320, 128, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.0.projection.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.0.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.0.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.0.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.0.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.0.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.0.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.0.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.0.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.0.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.0.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.0.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.0.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.0.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.0.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.0.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.0.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.0.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.0.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.0.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.0.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.1.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.1.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.1.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.1.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.1.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.1.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.1.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.1.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.1.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.1.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.1.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.1.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.1.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.1.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.1.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.1.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.1.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.1.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.2.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.2.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.2.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.2.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.2.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.2.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.2.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.2.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.2.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.2.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.2.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.2.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.2.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.2.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.2.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.2.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.2.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.2.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.3.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.3.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.3.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.3.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.3.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.3.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.3.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.3.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.3.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.3.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.3.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.3.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.3.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.3.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.3.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.3.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.3.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.3.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.4.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.4.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.4.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.4.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.4.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.4.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.4.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.4.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.4.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.4.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.4.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.4.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.4.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.4.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.4.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.4.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.4.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.4.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.5.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.5.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.5.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.5.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.5.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.5.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.5.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.5.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.5.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.5.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.5.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.5.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.5.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.5.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.5.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.5.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.5.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.5.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.6.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.6.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.6.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.6.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.6.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.6.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.6.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.6.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.6.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.6.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.6.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.6.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.6.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.6.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.6.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.6.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.6.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.6.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.7.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.7.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.7.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.7.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.7.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.7.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.7.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.7.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.7.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.7.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.7.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.7.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.7.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.7.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.7.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.7.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.7.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.7.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.8.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.8.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.8.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.8.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.8.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.8.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.8.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.8.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.8.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.8.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.8.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.8.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.8.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.8.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.8.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.8.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.8.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.8.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.9.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.9.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.9.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.9.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.9.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.9.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.9.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.9.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.9.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.9.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.9.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.9.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.9.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.9.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.9.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.9.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.9.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.9.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.10.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.10.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.10.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.10.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.10.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.10.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.10.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.10.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.10.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.10.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.10.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.10.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.10.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.10.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.10.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.10.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.10.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.10.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.11.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.11.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.11.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.11.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.11.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.11.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.11.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.11.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.11.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.11.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.11.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.11.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.11.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.11.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.11.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.11.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.11.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.11.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.12.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.12.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.12.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.12.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.12.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.12.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.12.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.12.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.12.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.12.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.12.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.12.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.12.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.12.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.12.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.12.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.12.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.12.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.13.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.13.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.13.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.13.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.13.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.13.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.13.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.13.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.13.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.13.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.13.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.13.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.13.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.13.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.13.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.13.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.13.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.13.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.14.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.14.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.14.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.14.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.14.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.14.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.14.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.14.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.14.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.14.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.14.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.14.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.14.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.14.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.14.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.14.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.14.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.14.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.15.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.15.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.15.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.15.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.15.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.15.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.15.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.15.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.15.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.15.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.15.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.15.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.15.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.15.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.15.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.15.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.15.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.15.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.16.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.16.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.16.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.16.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.16.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.16.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.16.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.16.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.16.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.16.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.16.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.16.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.16.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.16.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.16.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.16.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.16.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.16.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.17.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.17.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.17.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.17.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.17.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.17.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.17.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.17.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.17.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.17.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.17.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.17.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.17.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.17.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.17.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.17.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.17.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.17.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.18.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.18.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.18.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.18.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.18.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.18.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.18.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.18.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.18.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.18.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.18.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.18.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.18.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.18.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.18.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.18.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.18.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.18.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.19.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.19.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.19.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.19.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.19.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.19.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.19.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.19.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.19.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.19.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.19.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.19.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.19.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.19.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.19.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.19.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.19.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.19.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.20.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.20.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.20.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.20.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.20.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.20.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.20.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.20.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.20.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.20.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.20.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.20.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.20.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.20.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.20.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.20.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.20.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.20.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.21.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.21.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.21.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.21.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.21.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.21.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.21.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.21.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.21.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.21.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.21.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.21.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.21.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.21.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.21.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.21.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.21.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.21.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.22.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.22.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.22.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.22.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.22.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.22.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.22.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.22.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.22.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.22.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.22.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.22.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.22.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.22.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.22.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.22.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.22.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.22.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.23.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.23.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.23.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.23.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.23.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.23.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.23.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.23.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.23.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.23.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.23.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.23.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.23.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.23.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.23.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.23.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.23.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.23.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.24.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.24.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.24.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.24.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.24.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.24.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.24.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.24.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.24.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.24.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.24.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.24.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.24.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.24.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.24.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.24.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.24.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.24.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.25.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.25.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.25.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.25.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.25.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.25.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.25.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.25.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.25.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.25.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.25.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.25.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.25.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.25.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.25.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.25.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.25.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.25.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.26.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.26.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.26.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.26.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.26.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.26.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.26.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.26.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.26.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.26.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.26.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.26.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.26.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.26.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.26.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.26.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.26.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.26.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.27.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.27.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.27.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.27.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.27.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.27.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.27.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.27.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.27.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.27.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.27.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.27.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.27.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.27.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.27.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.27.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.27.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.27.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.28.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.28.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.28.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.28.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.28.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.28.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.28.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.28.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.28.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.28.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.28.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.28.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.28.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.28.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.28.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.28.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.28.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.28.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.29.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.29.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.29.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.29.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.29.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.29.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.29.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.29.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.29.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.29.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.29.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.29.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.29.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.29.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.29.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.29.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.29.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.29.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.30.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.30.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.30.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.30.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.30.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.30.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.30.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.30.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.30.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.30.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.30.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.30.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.30.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.30.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.30.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.30.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.30.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.30.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.31.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.31.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.31.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.31.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.31.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.31.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.31.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.31.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.31.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.31.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.31.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.31.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.31.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.31.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.31.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.31.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.31.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.31.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.32.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.32.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.32.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.32.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.32.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.32.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.32.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.32.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.32.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.32.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.32.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.32.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.32.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.32.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.32.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.32.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.32.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.32.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.33.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.33.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.33.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.33.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.33.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.33.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.33.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.33.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.33.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.33.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.33.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.33.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.33.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.33.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.33.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.33.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.33.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.33.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.34.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.34.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.34.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.34.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.34.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.34.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.34.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.34.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.34.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.34.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.34.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.34.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.34.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.34.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.34.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.34.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.34.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.34.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.35.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.35.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.35.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.35.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.35.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.35.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.35.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.35.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.35.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.35.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.35.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.35.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.35.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.35.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.35.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.35.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.35.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.35.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.36.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.36.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.36.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.36.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.36.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.36.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.36.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.36.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.36.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.36.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.36.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.36.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.36.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.36.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.36.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.36.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.36.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.36.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.37.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.37.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.37.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.37.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.37.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.37.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.37.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.37.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.37.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.37.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.37.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.37.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.37.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.37.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.37.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.37.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.37.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.37.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.38.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.38.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.38.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.38.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.38.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.38.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.38.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.38.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.38.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.38.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.38.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.38.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.38.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.38.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.38.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.38.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.38.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.38.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.39.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.39.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.39.attn.attn.in_proj_weight - torch.Size([960, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.39.attn.attn.in_proj_bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.39.attn.attn.out_proj.weight - torch.Size([320, 320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.39.attn.attn.out_proj.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.39.attn.sr.weight - torch.Size([320, 320, 2, 2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.39.attn.sr.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.39.attn.norm.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.39.attn.norm.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.39.norm2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.39.norm2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.39.ffn.layers.0.weight - torch.Size([1280, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.39.ffn.layers.0.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.39.ffn.layers.1.weight - torch.Size([1280, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.39.ffn.layers.1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.39.ffn.layers.4.weight - torch.Size([320, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.1.39.ffn.layers.4.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.2.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.2.2.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.0.projection.weight - torch.Size([512, 320, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.0.projection.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.0.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.0.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.0.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.0.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.0.attn.attn.in_proj_weight - torch.Size([1536, 512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.0.attn.attn.in_proj_bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.0.attn.attn.out_proj.weight - torch.Size([512, 512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.0.attn.attn.out_proj.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.0.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.0.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.0.ffn.layers.0.weight - torch.Size([2048, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.0.ffn.layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.0.ffn.layers.1.weight - torch.Size([2048, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.0.ffn.layers.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.0.ffn.layers.4.weight - torch.Size([512, 2048, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.0.ffn.layers.4.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.1.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.1.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.1.attn.attn.in_proj_weight - torch.Size([1536, 512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.1.attn.attn.in_proj_bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.1.attn.attn.out_proj.weight - torch.Size([512, 512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.1.attn.attn.out_proj.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.1.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.1.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.1.ffn.layers.0.weight - torch.Size([2048, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.1.ffn.layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.1.ffn.layers.1.weight - torch.Size([2048, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.1.ffn.layers.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.1.ffn.layers.4.weight - torch.Size([512, 2048, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.1.ffn.layers.4.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.2.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.2.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.2.attn.attn.in_proj_weight - torch.Size([1536, 512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.2.attn.attn.in_proj_bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.2.attn.attn.out_proj.weight - torch.Size([512, 512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.2.attn.attn.out_proj.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.2.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.2.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.2.ffn.layers.0.weight - torch.Size([2048, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.2.ffn.layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.2.ffn.layers.1.weight - torch.Size([2048, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.2.ffn.layers.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.2.ffn.layers.4.weight - torch.Size([512, 2048, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.1.2.ffn.layers.4.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.layers.3.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.conv_seg.weight - torch.Size([4, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.conv_seg.bias - torch.Size([4]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.convs.0.conv.weight - torch.Size([256, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.1.conv.weight - torch.Size([256, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.2.conv.weight - torch.Size([256, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.3.conv.weight - torch.Size([256, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.3.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.3.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fusion_conv.conv.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.fusion_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fusion_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
2023/06/09 21:24:07 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/06/09 21:24:07 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/06/09 21:24:07 - mmengine - INFO - Checkpoints will be saved to /ofo-share/repos-david/mmsegmentation_v2/work_dirs/segformer_mit-b5_8xb1-20k_safeforest_gascola_23_04_27_collect_04_compressed-1024x1024.
